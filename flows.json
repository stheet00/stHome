[
    {
        "id": "781e2d3a48b04110",
        "type": "tab",
        "label": "_maintenance",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e1c0c9780ef1442c",
        "type": "tab",
        "label": "UI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "40f5e7c72cdecaab",
        "type": "tab",
        "label": "HM",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eda35aea761e62ca",
        "type": "tab",
        "label": "EV",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "16d854753ce10409",
        "type": "tab",
        "label": "PowerMan",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e1a58a93ec1b7088",
        "type": "tab",
        "label": "HUE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0e0fd1a97350597a",
        "type": "tab",
        "label": "HUE API V2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d0287b86.19f57",
        "type": "subflow",
        "name": "espCO2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 60,
                "wires": [
                    {
                        "id": "1e50977d.ae26e1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 200,
                "wires": [
                    {
                        "id": "fd009eb7.af3b9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Id",
                "type": "str",
                "value": ""
            },
            {
                "name": "co2calib",
                "type": "env",
                "value": "${Id}/switch/co2calib/command"
            },
            {
                "name": "co2",
                "type": "env",
                "value": "${Id}/sensor/co2/state"
            },
            {
                "name": "co2warn",
                "type": "env",
                "value": "${Id}/switch/co2warn/state"
            },
            {
                "name": "co2high",
                "type": "env",
                "value": "${Id}/switch/co2high/state"
            },
            {
                "name": "status",
                "type": "str",
                "value": "${Id}/status"
            },
            {
                "name": "Topic",
                "type": "env",
                "value": "${Id}"
            }
        ],
        "color": "#DDAA99",
        "status": {
            "x": 900,
            "y": 140,
            "wires": [
                {
                    "id": "7fecd248.2f2544",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "7b3fcb1.35bfa34",
        "type": "subflow",
        "name": "Event Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 200,
                "wires": [
                    {
                        "id": "5887e8c4.48e338"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 100,
                "wires": [
                    {
                        "id": "d5d2e8d5.444e18",
                        "port": 0
                    }
                ]
            },
            {
                "x": 440,
                "y": 200,
                "wires": [
                    {
                        "id": "983e6b20.ba90b8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "3fd1fcdf.36063c",
        "type": "subflow",
        "name": "Light Response",
        "info": "",
        "category": "HUE v2",
        "in": [
            {
                "x": 100,
                "y": 380,
                "wires": [
                    {
                        "id": "88eac1bd4d2ab5b7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 380,
                "wires": [
                    {
                        "id": "3b007fc2.9f0448",
                        "port": 0
                    },
                    {
                        "id": "a5f5c653.282a7",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "light_ID",
                "type": "str",
                "value": "replace with discovered Lamp / Group ID"
            }
        ],
        "meta": {},
        "color": "#C0DEED",
        "icon": "node-red/light.svg"
    },
    {
        "id": "7a14643a.75260c",
        "type": "subflow",
        "name": "Splitter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 540,
                "y": 300,
                "wires": [
                    {
                        "id": "273108cc.4b9928"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 960,
                "y": 300,
                "wires": [
                    {
                        "id": "a7524f72.576f3",
                        "port": 0
                    },
                    {
                        "id": "f3125664899350c0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d1abcd4.10bc03",
        "type": "subflow",
        "name": "Request Timer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 320,
                "y": 180,
                "wires": [
                    {
                        "id": "ae3b4275178b1b9a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 300,
                "wires": [
                    {
                        "id": "244e6655.741d9a",
                        "port": 0
                    },
                    {
                        "id": "6bd8af1f.89fdd",
                        "port": 0
                    },
                    {
                        "id": "2a5d491d.97c806",
                        "port": 0
                    },
                    {
                        "id": "9e7f2747.5c4628",
                        "port": 0
                    },
                    {
                        "id": "c2dcb099.f3e78",
                        "port": 0
                    },
                    {
                        "id": "9fd56572.0c0b38",
                        "port": 0
                    },
                    {
                        "id": "f15b3597.8713b8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "aff9cdb5.1ba04",
        "type": "subflow",
        "name": "Scenes Room / Zones",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 660,
                "y": 340,
                "wires": [
                    {
                        "id": "d783c4a0.a134f8"
                    },
                    {
                        "id": "b2fff99f.0b7af8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 300,
                "wires": [
                    {
                        "id": "fb43fcd6.f6b8c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1260,
                "y": 380,
                "wires": [
                    {
                        "id": "c17682ee.48568",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "f2b9624783dc3e90",
        "type": "subflow",
        "name": "HUE Motion Receiver",
        "info": "",
        "category": "HUE v2",
        "in": [
            {
                "x": 40,
                "y": 440,
                "wires": [
                    {
                        "id": "60a83618012eb9c9"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 870,
                "y": 360,
                "wires": [
                    {
                        "id": "341dec26f895500c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 890,
                "y": 440,
                "wires": [
                    {
                        "id": "341dec26f895500c",
                        "port": 0
                    },
                    {
                        "id": "7c509fd93507f730",
                        "port": 0
                    }
                ]
            },
            {
                "x": 870,
                "y": 520,
                "wires": [
                    {
                        "id": "7c509fd93507f730",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "motion_ID",
                "type": "str",
                "value": "replace with discovered Motion Sensor ID"
            }
        ],
        "meta": {},
        "color": "#9876D3",
        "outputLabels": [
            "motion true",
            "motion true / false",
            "motion false"
        ],
        "icon": "node-red/bridge-dash.svg"
    },
    {
        "id": "06d15551bcfcd5b5",
        "type": "subflow",
        "name": "HUE Light Receiver",
        "info": "",
        "category": "HUE v2",
        "in": [
            {
                "x": 40,
                "y": 580,
                "wires": [
                    {
                        "id": "2e987bc45c0292d9"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 500,
                "wires": [
                    {
                        "id": "8a31e5a84336cd35",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1040,
                "y": 580,
                "wires": [
                    {
                        "id": "8a31e5a84336cd35",
                        "port": 0
                    },
                    {
                        "id": "b3628c4839c46f6f",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1020,
                "y": 660,
                "wires": [
                    {
                        "id": "b3628c4839c46f6f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "light_ID",
                "type": "str",
                "value": "replace with discovered Lamp / Group ID"
            }
        ],
        "meta": {},
        "color": "#86E3FF",
        "outputLabels": [
            "On",
            "On / Off",
            "Off"
        ],
        "icon": "node-red/light.svg"
    },
    {
        "id": "1b9462200f30effc",
        "type": "subflow",
        "name": "HUE Button Receiver",
        "info": "",
        "category": "HUE v2",
        "in": [
            {
                "x": 40,
                "y": 500,
                "wires": [
                    {
                        "id": "95ddb4cb6d33ef4b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1230,
                "y": 240,
                "wires": [
                    {
                        "id": "f9110fa213c2ab10",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1240,
                "y": 440,
                "wires": [
                    {
                        "id": "07fc32fc6b1b6dc3",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1210,
                "y": 600,
                "wires": [
                    {
                        "id": "6c27f1a1e501b9e0",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1230,
                "y": 760,
                "wires": [
                    {
                        "id": "7d7e9fd254989b3e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "button_ID",
                "type": "str",
                "value": "replace with discovered button ID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#E6E0F8",
        "outputLabels": [
            "initial_press",
            "short_release",
            "repeat",
            "long_release"
        ],
        "icon": "font-awesome/fa-toggle-on"
    },
    {
        "id": "ca185c1af81e0a09",
        "type": "ccu-connection",
        "name": "hm00",
        "host": "192.168.20.8",
        "regaEnabled": true,
        "bcrfEnabled": true,
        "iprfEnabled": true,
        "virtEnabled": false,
        "bcwiEnabled": false,
        "cuxdEnabled": true,
        "regaPoll": true,
        "regaInterval": "30",
        "rpcPingTimeout": "60",
        "rpcInitAddress": "",
        "rpcServerHost": "192.168.20.17",
        "rpcBinPort": "2048",
        "rpcXmlPort": "2049",
        "tls": false,
        "inSecure": false,
        "authentication": false,
        "username": "",
        "password": "",
        "queueTimeout": "5000",
        "queuePause": "250",
        "contextStore": ""
    },
    {
        "id": "1e1a0e45bfb2abe0",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": false
    },
    {
        "id": "25b4ae1f.f6e792",
        "type": "mqtt-broker",
        "name": "openWB",
        "broker": "192.168.20.14",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "7e9912ee.546204",
        "type": "modbus-client",
        "name": "SE-Gartenhaus",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.20.16",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "78b1c87b.391bc8",
        "type": "modbus-client",
        "name": "SE-Dach",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": false,
        "tcpHost": "192.168.20.13",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": false,
        "reconnectTimeout": 20000,
        "parallelUnitIdsAllowed": false
    },
    {
        "id": "6be926ebebb69961",
        "type": "ccu-connection",
        "name": "hm02",
        "host": "192.168.20.7",
        "regaEnabled": true,
        "bcrfEnabled": true,
        "iprfEnabled": true,
        "virtEnabled": false,
        "bcwiEnabled": false,
        "cuxdEnabled": true,
        "regaPoll": true,
        "regaInterval": "30",
        "rpcPingTimeout": "60",
        "rpcInitAddress": "",
        "rpcServerHost": "192.168.20.17",
        "rpcBinPort": "2050",
        "rpcXmlPort": "2051",
        "tls": false,
        "inSecure": false,
        "authentication": false,
        "username": "",
        "password": "",
        "queueTimeout": "5000",
        "queuePause": "250",
        "contextStore": ""
    },
    {
        "id": "5cdf4104.dd067",
        "type": "mqtt-broker",
        "name": "nodered",
        "broker": "192.168.20.12",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "a713096719561df7",
        "type": "philipshue-events-config",
        "address": "192.168.20.9",
        "applicationkey": "b8rHIK2kn8slFf0xs9slWQ8NLbfW6csb6ZiU-Y5W"
    },
    {
        "id": "4bc31af9bd03bbdc",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "b818fe83.218c38",
        "type": "mqtt out",
        "z": "d0287b86.19f57",
        "name": "",
        "topic": "${co2calib}",
        "qos": "",
        "retain": "",
        "broker": "5cdf4104.dd067",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "1e50977d.ae26e1",
        "type": "function",
        "z": "d0287b86.19f57",
        "name": "Calib ON",
        "func": "msg.payload = \"ON\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 60,
        "wires": [
            [
                "b818fe83.218c38"
            ]
        ]
    },
    {
        "id": "48c5e2e1.aab36c",
        "type": "mqtt in",
        "z": "d0287b86.19f57",
        "name": "",
        "topic": "${co2}",
        "qos": "2",
        "datatype": "auto",
        "broker": "5cdf4104.dd067",
        "inputs": 0,
        "x": 170,
        "y": 140,
        "wires": [
            [
                "392d6626.612b7a"
            ]
        ]
    },
    {
        "id": "7fecd248.2f2544",
        "type": "function",
        "z": "d0287b86.19f57",
        "name": "set status OK",
        "func": "msg.payload = {fill: \"green\", text: msg.payload + \"ppm\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bd8124f5.bdcbe8",
        "type": "mqtt in",
        "z": "d0287b86.19f57",
        "name": "",
        "topic": "${co2warn}",
        "qos": "2",
        "datatype": "auto",
        "broker": "5cdf4104.dd067",
        "inputs": 0,
        "x": 190,
        "y": 240,
        "wires": [
            [
                "b18ce971.ecfcf"
            ]
        ]
    },
    {
        "id": "9b3f9cf6.ba5738",
        "type": "mqtt in",
        "z": "d0287b86.19f57",
        "name": "",
        "topic": "${co2high}",
        "qos": "2",
        "datatype": "auto",
        "broker": "5cdf4104.dd067",
        "inputs": 0,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "470dd2d2.a24f74"
            ]
        ]
    },
    {
        "id": "fd009eb7.af3b9",
        "type": "function",
        "z": "d0287b86.19f57",
        "name": "",
        "func": "var name = env.get(\"Topic\") || \"NA\";\nvar status = flow.get(\"status\") || \"online\";\nvar co2 = flow.get(\"co2\")*1 || 400;\nvar co2warn = flow.get(\"co2warn\") || \"OFF\";\nvar co2high = flow.get(\"co2high\") || \"OFF\";\n\nvar newMsg = { topic: name, payload: {co2 : co2, level: \"low\", status: status } }\n\nif(co2warn == \"ON\") { newMsg.payload.level = \"warn\" }\nif(co2high == \"ON\") { newMsg.payload.level = \"high\" }\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "392d6626.612b7a",
        "type": "function",
        "z": "d0287b86.19f57",
        "name": "flow.co2",
        "func": "flow.set(\"co2\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 140,
        "wires": [
            [
                "7fecd248.2f2544",
                "fd009eb7.af3b9"
            ]
        ]
    },
    {
        "id": "b18ce971.ecfcf",
        "type": "function",
        "z": "d0287b86.19f57",
        "name": "flow.co2warn",
        "func": "flow.set(\"co2warn\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 240,
        "wires": [
            [
                "fd009eb7.af3b9"
            ]
        ]
    },
    {
        "id": "470dd2d2.a24f74",
        "type": "function",
        "z": "d0287b86.19f57",
        "name": "flow.co2high",
        "func": "flow.set(\"co2high\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 280,
        "wires": [
            [
                "fd009eb7.af3b9"
            ]
        ]
    },
    {
        "id": "4745cd45.dc30fc",
        "type": "mqtt in",
        "z": "d0287b86.19f57",
        "name": "",
        "topic": "${status}",
        "qos": "2",
        "datatype": "auto",
        "broker": "5cdf4104.dd067",
        "inputs": 0,
        "x": 180,
        "y": 320,
        "wires": [
            [
                "dcf4d2a5.d2c72"
            ]
        ]
    },
    {
        "id": "dcf4d2a5.d2c72",
        "type": "function",
        "z": "d0287b86.19f57",
        "name": "flow.co2high",
        "func": "flow.set(\"status\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "fd009eb7.af3b9"
            ]
        ]
    },
    {
        "id": "5887e8c4.48e338",
        "type": "json",
        "z": "7b3fcb1.35bfa34",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 295,
        "y": 200,
        "wires": [
            [
                "983e6b20.ba90b8"
            ]
        ],
        "l": false
    },
    {
        "id": "983e6b20.ba90b8",
        "type": "split",
        "z": "7b3fcb1.35bfa34",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "id",
        "x": 295,
        "y": 140,
        "wires": [
            [
                "d2c4499f.07e4e"
            ]
        ],
        "l": false
    },
    {
        "id": "d2c4499f.07e4e",
        "type": "change",
        "z": "7b3fcb1.35bfa34",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 375,
        "y": 140,
        "wires": [
            [
                "7851ee43.5d9f68"
            ]
        ],
        "l": false
    },
    {
        "id": "7851ee43.5d9f68",
        "type": "split",
        "z": "7b3fcb1.35bfa34",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "id",
        "x": 295,
        "y": 100,
        "wires": [
            [
                "d5d2e8d5.444e18"
            ]
        ],
        "l": false
    },
    {
        "id": "d5d2e8d5.444e18",
        "type": "rbe",
        "z": "7b3fcb1.35bfa34",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 375,
        "y": 100,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "edb5df72.69def8",
        "type": "rbe",
        "z": "3fd1fcdf.36063c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 730,
        "y": 300,
        "wires": [
            [
                "3b007fc2.9f0448"
            ]
        ]
    },
    {
        "id": "3b007fc2.9f0448",
        "type": "switch",
        "z": "3fd1fcdf.36063c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "6eab42b7.86eab4",
        "type": "change",
        "z": "3fd1fcdf.36063c",
        "name": "False",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 260,
        "wires": [
            [
                "dc3e64b5.ab74e8"
            ]
        ]
    },
    {
        "id": "dc3e64b5.ab74e8",
        "type": "delay",
        "z": "3fd1fcdf.36063c",
        "name": "1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 850,
        "y": 260,
        "wires": [
            [
                "edb5df72.69def8"
            ]
        ]
    },
    {
        "id": "bc246720.a972d",
        "type": "change",
        "z": "3fd1fcdf.36063c",
        "name": "True",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "edb5df72.69def8"
            ]
        ]
    },
    {
        "id": "3581683f.6598d",
        "type": "delay",
        "z": "3fd1fcdf.36063c",
        "name": "1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 850,
        "y": 500,
        "wires": [
            [
                "d6d75391.dccac8"
            ]
        ]
    },
    {
        "id": "d6d75391.dccac8",
        "type": "rbe",
        "z": "3fd1fcdf.36063c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 730,
        "y": 460,
        "wires": [
            [
                "a5f5c653.282a7"
            ]
        ]
    },
    {
        "id": "6bdd0583.7c75e4",
        "type": "change",
        "z": "3fd1fcdf.36063c",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 420,
        "wires": [
            [
                "d6d75391.dccac8"
            ]
        ]
    },
    {
        "id": "cf0d42b2.ad37e8",
        "type": "change",
        "z": "3fd1fcdf.36063c",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 500,
        "wires": [
            [
                "3581683f.6598d"
            ]
        ]
    },
    {
        "id": "a5f5c653.282a7",
        "type": "switch",
        "z": "3fd1fcdf.36063c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9fc6225e.6421c8",
        "type": "switch",
        "z": "3fd1fcdf.36063c",
        "name": "true / false",
        "property": "payload.data.0.on.on",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 380,
        "wires": [
            [
                "bc246720.a972d",
                "6eab42b7.86eab4"
            ],
            [
                "6bdd0583.7c75e4",
                "cf0d42b2.ad37e8"
            ]
        ]
    },
    {
        "id": "88eac1bd4d2ab5b7",
        "type": "switch",
        "z": "3fd1fcdf.36063c",
        "name": "light / grouped_light ID",
        "property": "payload.data.0.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "light_ID",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 260,
        "y": 380,
        "wires": [
            [
                "9fc6225e.6421c8"
            ]
        ]
    },
    {
        "id": "273108cc.4b9928",
        "type": "switch",
        "z": "7a14643a.75260c",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "split",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "array",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 300,
        "wires": [
            [
                "fb18185d.5df9e8"
            ],
            [
                "f3125664899350c0"
            ]
        ]
    },
    {
        "id": "a7524f72.576f3",
        "type": "split",
        "z": "7a14643a.75260c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 810,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "fb18185d.5df9e8",
        "type": "change",
        "z": "7a14643a.75260c",
        "name": "del topic",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 280,
        "wires": [
            [
                "a7524f72.576f3"
            ]
        ]
    },
    {
        "id": "f3125664899350c0",
        "type": "change",
        "z": "7a14643a.75260c",
        "name": "del topic",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f0a2d4f4.19a288",
        "type": "delay",
        "z": "d1abcd4.10bc03",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 480,
        "y": 220,
        "wires": [
            [
                "6bd8af1f.89fdd",
                "a0bdc284.5e792"
            ]
        ]
    },
    {
        "id": "a0bdc284.5e792",
        "type": "delay",
        "z": "d1abcd4.10bc03",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "2a5d491d.97c806",
                "ffdeebc6.4d7b88"
            ]
        ]
    },
    {
        "id": "244e6655.741d9a",
        "type": "change",
        "z": "d1abcd4.10bc03",
        "name": "room",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "room",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "6bd8af1f.89fdd",
        "type": "change",
        "z": "d1abcd4.10bc03",
        "name": "zone",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "zone",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2a5d491d.97c806",
        "type": "change",
        "z": "d1abcd4.10bc03",
        "name": "scene",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "scene",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "ffdeebc6.4d7b88",
        "type": "delay",
        "z": "d1abcd4.10bc03",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 300,
        "wires": [
            [
                "c2dcb099.f3e78",
                "b2ade02a.ff9c1"
            ]
        ]
    },
    {
        "id": "c2dcb099.f3e78",
        "type": "change",
        "z": "d1abcd4.10bc03",
        "name": "device",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "device",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9e7f2747.5c4628",
        "type": "change",
        "z": "d1abcd4.10bc03",
        "name": "motion",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "motion",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "b2ade02a.ff9c1",
        "type": "delay",
        "z": "d1abcd4.10bc03",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 340,
        "wires": [
            [
                "9e7f2747.5c4628",
                "db7b216c.0f12c"
            ]
        ]
    },
    {
        "id": "9fd56572.0c0b38",
        "type": "change",
        "z": "d1abcd4.10bc03",
        "name": "button",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "button",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f15b3597.8713b8",
        "type": "change",
        "z": "d1abcd4.10bc03",
        "name": "light",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "db7b216c.0f12c",
        "type": "delay",
        "z": "d1abcd4.10bc03",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 480,
        "y": 380,
        "wires": [
            [
                "9fd56572.0c0b38",
                "5ff7e2ec.4fce7c"
            ]
        ]
    },
    {
        "id": "5ff7e2ec.4fce7c",
        "type": "delay",
        "z": "d1abcd4.10bc03",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 480,
        "y": 420,
        "wires": [
            [
                "f15b3597.8713b8"
            ]
        ]
    },
    {
        "id": "ae3b4275178b1b9a",
        "type": "delay",
        "z": "d1abcd4.10bc03",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 180,
        "wires": [
            [
                "f0a2d4f4.19a288",
                "244e6655.741d9a"
            ]
        ]
    },
    {
        "id": "b2fff99f.0b7af8",
        "type": "split",
        "z": "aff9cdb5.1ba04",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 840,
        "y": 380,
        "wires": [
            [
                "48dc6c9.51e3694"
            ]
        ]
    },
    {
        "id": "48dc6c9.51e3694",
        "type": "switch",
        "z": "aff9cdb5.1ba04",
        "name": "",
        "property": "payload.zone-name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 990,
        "y": 380,
        "wires": [
            [
                "c17682ee.48568"
            ]
        ]
    },
    {
        "id": "c17682ee.48568",
        "type": "join",
        "z": "aff9cdb5.1ba04",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "a1aefb6a.38dee8",
        "type": "switch",
        "z": "aff9cdb5.1ba04",
        "name": "",
        "property": "payload.room-name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 990,
        "y": 300,
        "wires": [
            [
                "fb43fcd6.f6b8c"
            ]
        ]
    },
    {
        "id": "fb43fcd6.f6b8c",
        "type": "join",
        "z": "aff9cdb5.1ba04",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "3",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d783c4a0.a134f8",
        "type": "split",
        "z": "aff9cdb5.1ba04",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 840,
        "y": 300,
        "wires": [
            [
                "a1aefb6a.38dee8"
            ]
        ]
    },
    {
        "id": "acaa8ed3a1a9fc07",
        "type": "switch",
        "z": "f2b9624783dc3e90",
        "name": "payload.data.0.motion.motion",
        "property": "payload.data.0.motion.motion",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 440,
        "wires": [
            [
                "341dec26f895500c"
            ],
            [
                "7c509fd93507f730"
            ]
        ]
    },
    {
        "id": "341dec26f895500c",
        "type": "change",
        "z": "f2b9624783dc3e90",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "7c509fd93507f730",
        "type": "change",
        "z": "f2b9624783dc3e90",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "60a83618012eb9c9",
        "type": "switch",
        "z": "f2b9624783dc3e90",
        "name": "Motion Sensor ID",
        "property": "payload.data.0.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "motion_ID",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 440,
        "wires": [
            [
                "acaa8ed3a1a9fc07"
            ]
        ]
    },
    {
        "id": "ec665fa1fdcedbac",
        "type": "comment",
        "z": "f2b9624783dc3e90",
        "name": "HUE - Motion Sensor Event Filter \\n \\n Output 1: Will send just an **true** when Motion is detected \\n  \\n Output 2: Will send an **true** when Motion is detected and a **false** if no motion is detected any longer. \\n  \\n Output 3: Will send just an **false** when no Motion is detected any longer. \\n  \\n ----------------------- \\n All outputs are boolean \\n ----------------------- \\n  \\n Most easy Subflow, but convinient when lots of sensors need to be set up.",
        "info": "Output 1:\nWill send just an **true** when Motion is detected\n\nOutput 2:\nWill send an **true** when Motion is detected and a **false** if no motion is detected any longer.\n\nOutput 3:\nWill send just an **false** when no Motion is detected any longer.\n\n-----------------------\nAll outputs are boolean\n-----------------------\n\nMost easy Subflow, but convinient when lots of sensors need to be set up.",
        "x": 380,
        "y": 180,
        "wires": []
    },
    {
        "id": "e3cee5b6a050c2a2",
        "type": "rbe",
        "z": "06d15551bcfcd5b5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 730,
        "y": 500,
        "wires": [
            [
                "8a31e5a84336cd35"
            ]
        ]
    },
    {
        "id": "8a31e5a84336cd35",
        "type": "switch",
        "z": "06d15551bcfcd5b5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "081d6ed872820712",
        "type": "change",
        "z": "06d15551bcfcd5b5",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 460,
        "wires": [
            [
                "33073fdb56049c7b"
            ]
        ]
    },
    {
        "id": "33073fdb56049c7b",
        "type": "delay",
        "z": "06d15551bcfcd5b5",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 850,
        "y": 460,
        "wires": [
            [
                "e3cee5b6a050c2a2"
            ]
        ]
    },
    {
        "id": "3217a6fbc9bdc0e0",
        "type": "change",
        "z": "06d15551bcfcd5b5",
        "name": "True",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 540,
        "wires": [
            [
                "e3cee5b6a050c2a2"
            ]
        ]
    },
    {
        "id": "980510f1c771a4a5",
        "type": "delay",
        "z": "06d15551bcfcd5b5",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 850,
        "y": 700,
        "wires": [
            [
                "67c2e061e7aff1be"
            ]
        ]
    },
    {
        "id": "67c2e061e7aff1be",
        "type": "rbe",
        "z": "06d15551bcfcd5b5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 730,
        "y": 660,
        "wires": [
            [
                "b3628c4839c46f6f"
            ]
        ]
    },
    {
        "id": "1d41a53aa14399c7",
        "type": "change",
        "z": "06d15551bcfcd5b5",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 620,
        "wires": [
            [
                "67c2e061e7aff1be"
            ]
        ]
    },
    {
        "id": "7daef9e2afc3c77a",
        "type": "change",
        "z": "06d15551bcfcd5b5",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 700,
        "wires": [
            [
                "980510f1c771a4a5"
            ]
        ]
    },
    {
        "id": "b3628c4839c46f6f",
        "type": "switch",
        "z": "06d15551bcfcd5b5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c5515472208800e5",
        "type": "switch",
        "z": "06d15551bcfcd5b5",
        "name": "payload.data.0.on.on",
        "property": "payload.data.0.on.on",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 580,
        "wires": [
            [
                "3217a6fbc9bdc0e0",
                "081d6ed872820712"
            ],
            [
                "1d41a53aa14399c7",
                "7daef9e2afc3c77a"
            ]
        ]
    },
    {
        "id": "ea87f9721cfde4c1",
        "type": "comment",
        "z": "06d15551bcfcd5b5",
        "name": "HUE light / grouped_light Event Filter \\n  \\n Output 1: This output will send a **true** when Lights or Groups are turned on. \\n  \\n Output 2: This output will send a **true** when Lights or Groups are turned on AND a **false** when Lights or Groups are turned off. \\n  \\n Output 3: This output will send a **false** when Lights or Groups are turned off \\n  \\n Depending on your Situation it can be useful just to have a **true** OR **false** OR **both** states in your Flow. Thats the reason i built this Subflow. \\n Just use the Output that makes you happy :) \\n  \\n ----------------------- \\n All outputs are boolean  \\n ----------------------- \\n  \\n The delays will reset the RBE nodes. \\n You can adjust the times for your needs, but this worked for me prefectly.",
        "info": "Output 1:\nThis output will send a **true** when Lights or Groups are turned on.\n\nOutput 2:\nThis output will send a **true** when Lights or Groups are turned on AND a **false** when Lights or Groups are turned off.\n\nOutput 3:\nThis output will send a **false** when Lights or Groups are turned off\n\nDepending on your Situation it can be useful just to have a **true** OR **false** OR **both** states in your Flow. Thats the reason i built this Subflow.\nJust use the Output that makes you happy :)\n\n-----------------------\nAll outputs are boolean \n-----------------------\n\nThe delays will reset the RBE nodes.\nYou can adjust the times for your needs, but this worked for me prefectly.",
        "x": 510,
        "y": 220,
        "wires": []
    },
    {
        "id": "2e987bc45c0292d9",
        "type": "switch",
        "z": "06d15551bcfcd5b5",
        "name": "light / grouped_light ID",
        "property": "payload.data.0.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "light_ID",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 200,
        "y": 580,
        "wires": [
            [
                "c5515472208800e5"
            ]
        ]
    },
    {
        "id": "03dfed0e2424b710",
        "type": "rbe",
        "z": "1b9462200f30effc",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 240,
        "wires": [
            [
                "f9110fa213c2ab10"
            ]
        ]
    },
    {
        "id": "f9110fa213c2ab10",
        "type": "switch",
        "z": "1b9462200f30effc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1070,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "dd22e26c14e343c6",
        "type": "change",
        "z": "1b9462200f30effc",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 200,
        "wires": [
            [
                "271860dec4c0f9d0"
            ]
        ]
    },
    {
        "id": "271860dec4c0f9d0",
        "type": "delay",
        "z": "1b9462200f30effc",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1070,
        "y": 200,
        "wires": [
            [
                "03dfed0e2424b710"
            ]
        ]
    },
    {
        "id": "59a612a2e090cf9e",
        "type": "change",
        "z": "1b9462200f30effc",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 280,
        "wires": [
            [
                "03dfed0e2424b710"
            ]
        ]
    },
    {
        "id": "eaa792ab298364e4",
        "type": "delay",
        "z": "1b9462200f30effc",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1070,
        "y": 720,
        "wires": [
            [
                "369a46516051f95d"
            ]
        ]
    },
    {
        "id": "369a46516051f95d",
        "type": "rbe",
        "z": "1b9462200f30effc",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 950,
        "y": 760,
        "wires": [
            [
                "7d7e9fd254989b3e"
            ]
        ]
    },
    {
        "id": "676a2053d12be8b5",
        "type": "change",
        "z": "1b9462200f30effc",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 720,
        "wires": [
            [
                "eaa792ab298364e4"
            ]
        ]
    },
    {
        "id": "f1c8a0f5e3028ae1",
        "type": "change",
        "z": "1b9462200f30effc",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 800,
        "wires": [
            [
                "369a46516051f95d"
            ]
        ]
    },
    {
        "id": "7d7e9fd254989b3e",
        "type": "switch",
        "z": "1b9462200f30effc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1070,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "698fd0a7fe32b7dc",
        "type": "switch",
        "z": "1b9462200f30effc",
        "name": "payload.data.0.button.last_event",
        "property": "payload.data.0.button.last_event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "initial_press",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "short_release",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "repeat",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "long_release",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 660,
        "y": 500,
        "wires": [
            [
                "dd22e26c14e343c6",
                "59a612a2e090cf9e"
            ],
            [
                "4ec9d73d640eb554",
                "47debee3db33fa19"
            ],
            [
                "6c27f1a1e501b9e0"
            ],
            [
                "f1c8a0f5e3028ae1",
                "676a2053d12be8b5"
            ]
        ]
    },
    {
        "id": "caf938617a122c7b",
        "type": "rbe",
        "z": "1b9462200f30effc",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 950,
        "y": 440,
        "wires": [
            [
                "07fc32fc6b1b6dc3"
            ]
        ]
    },
    {
        "id": "07fc32fc6b1b6dc3",
        "type": "switch",
        "z": "1b9462200f30effc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1070,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "47debee3db33fa19",
        "type": "change",
        "z": "1b9462200f30effc",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 400,
        "wires": [
            [
                "4d3a9381622076b8"
            ]
        ]
    },
    {
        "id": "4d3a9381622076b8",
        "type": "delay",
        "z": "1b9462200f30effc",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1070,
        "y": 400,
        "wires": [
            [
                "caf938617a122c7b"
            ]
        ]
    },
    {
        "id": "4ec9d73d640eb554",
        "type": "change",
        "z": "1b9462200f30effc",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 480,
        "wires": [
            [
                "caf938617a122c7b"
            ]
        ]
    },
    {
        "id": "6c27f1a1e501b9e0",
        "type": "change",
        "z": "1b9462200f30effc",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "fc3ad5de03aa0dc6",
        "type": "comment",
        "z": "1b9462200f30effc",
        "name": "HUE Button Event Filter \\n  \\n Output 1: The **initial_press** comes ALWAYS directly after you push the Button. Quickest response possible! \\n  \\n Output 2: The **short_release** will just appear after the **initial_press**, when you pushed the Button quick. \\n  \\n Output 3: The **repeat** will appear if you hold the button, and will send a message every second until you release it. \\n  \\n Output 4: The **long_release** will appear after the **repeat** ENDED! \\n  \\n -------------------------------- \\n All outputs are boolean **true** \\n -------------------------------- \\n  \\n The delays will reset the RBE node with a false. \\n You can adjust the times for your needs, but this worked for me prefectly.",
        "info": "Output 1:\nThe **initial_press** comes ALWAYS directly after you push the Button. Quickest response possible!\n\nOutput 2:\nThe **short_release** will just appear after the **initial_press**, when you pushed the Button quick.\n\nOutput 3:\nThe **repeat** will appear if you hold the button, and will send a message every second until you release it.\n\nOutput 4:\nThe **long_release** will appear after the **repeat** ENDED!\n\n\n--------------------------------\nAll outputs are boolean **true**\n--------------------------------\n\n\nThe delays will reset the RBE node with a false.\nYou can adjust the times for your needs, but this worked for me prefectly.",
        "x": 420,
        "y": 200,
        "wires": []
    },
    {
        "id": "95ddb4cb6d33ef4b",
        "type": "switch",
        "z": "1b9462200f30effc",
        "name": "Button ID",
        "property": "payload.data.0.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "button_ID",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 260,
        "y": 500,
        "wires": [
            [
                "698fd0a7fe32b7dc"
            ]
        ]
    },
    {
        "id": "38ec287f.814568",
        "type": "exec",
        "z": "781e2d3a48b04110",
        "command": "sudo ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "System Command",
        "x": 390,
        "y": 120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7487d790.49c368",
        "type": "inject",
        "z": "781e2d3a48b04110",
        "name": "Restart node-RED",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "node-red-restart",
        "payloadType": "str",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "38ec287f.814568"
            ]
        ]
    },
    {
        "id": "fb03b353.5250f",
        "type": "comment",
        "z": "781e2d3a48b04110",
        "name": "NodeRed restart",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "fc24ab83960a00e0",
        "type": "uibuilder",
        "z": "e1c0c9780ef1442c",
        "name": "",
        "topic": "",
        "url": "home",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "svelte-basic",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "dist",
        "deployedVersion": "6.0.0",
        "showMsgUib": false,
        "x": 100,
        "y": 180,
        "wires": [
            [
                "e281cdb2d1a7f260",
                "918088e15fd8ab1c"
            ],
            [
                "3283e680.04337a"
            ]
        ]
    },
    {
        "id": "e281cdb2d1a7f260",
        "type": "debug",
        "z": "e1c0c9780ef1442c",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 120,
        "wires": []
    },
    {
        "id": "7435b7ddab5d9d58",
        "type": "comment",
        "z": "e1c0c9780ef1442c",
        "name": "!!! How to develop the UI --> Details",
        "info": "Docs: http://192.168.20.17:1880/uibuilder/techdocs/#/svelte\n\n(1) open console and login\n(2) navigate to ~/.node-red/projects/stHome/uibuilder/home\n(3) execute: npm run dev",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "5817b2f6.8024bc",
        "type": "change",
        "z": "e1c0c9780ef1442c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "RoomHeatChg",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "uibuilderCtrl",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 620,
        "wires": [
            [
                "b0595157eb15f6ba"
            ]
        ]
    },
    {
        "id": "3283e680.04337a",
        "type": "switch",
        "z": "e1c0c9780ef1442c",
        "name": "ui ctrl",
        "property": "uibuilderCtrl",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "client connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ready for content",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 350,
        "y": 640,
        "wires": [
            [
                "5817b2f6.8024bc"
            ],
            [
                "5817b2f6.8024bc"
            ],
            [
                "6dded821.4040c8"
            ]
        ]
    },
    {
        "id": "6dded821.4040c8",
        "type": "debug",
        "z": "e1c0c9780ef1442c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 530,
        "y": 680,
        "wires": []
    },
    {
        "id": "07bbeebdbba51021",
        "type": "comment",
        "z": "e1c0c9780ef1442c",
        "name": "Send data on re-connect",
        "info": "",
        "x": 410,
        "y": 580,
        "wires": []
    },
    {
        "id": "b0595157eb15f6ba",
        "type": "link out",
        "z": "e1c0c9780ef1442c",
        "name": "ui_client_connect",
        "mode": "link",
        "links": [
            "7e459f7597b25f7a",
            "a0b69e2a0299aac9",
            "7fb445d726a4195f",
            "4254b51be531da74",
            "16e5f177fcc2e513",
            "bc4901d171fd3d6d"
        ],
        "x": 725,
        "y": 620,
        "wires": []
    },
    {
        "id": "7a2f080c754d5aae",
        "type": "uib-sender",
        "z": "e1c0c9780ef1442c",
        "url": "home",
        "name": "",
        "topic": "",
        "passthrough": false,
        "return": false,
        "outputs": 0,
        "x": 830,
        "y": 900,
        "wires": []
    },
    {
        "id": "a3eca86f26a147a9",
        "type": "inject",
        "z": "e1c0c9780ef1442c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 900,
        "wires": [
            [
                "504faa687aa090c8"
            ]
        ]
    },
    {
        "id": "504faa687aa090c8",
        "type": "influxdb in",
        "z": "e1c0c9780ef1442c",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "query": "from(bucket: \"homematic\")\n  |> range(start: -8h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ACTUAL_TEMPERATURE\" or r[\"_measurement\"] == \"HUMIDITY\" or r[\"_measurement\"] == \"TEMPERATURE\")\n  |> last()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "stHome",
        "x": 350,
        "y": 900,
        "wires": [
            [
                "f0bac037c693c79e"
            ]
        ]
    },
    {
        "id": "f0bac037c693c79e",
        "type": "change",
        "z": "e1c0c9780ef1442c",
        "name": "indb/homematic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "indb/homematic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 900,
        "wires": [
            [
                "7a2f080c754d5aae",
                "e8719c1a52c90712"
            ]
        ]
    },
    {
        "id": "e8719c1a52c90712",
        "type": "debug",
        "z": "e1c0c9780ef1442c",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 980,
        "wires": []
    },
    {
        "id": "7e459f7597b25f7a",
        "type": "link in",
        "z": "e1c0c9780ef1442c",
        "name": "link in 1",
        "links": [
            "b0595157eb15f6ba"
        ],
        "x": 125,
        "y": 960,
        "wires": [
            [
                "504faa687aa090c8"
            ]
        ]
    },
    {
        "id": "53bc2ba72735bec3",
        "type": "comment",
        "z": "e1c0c9780ef1442c",
        "name": "Send Temp and Humi",
        "info": "",
        "x": 140,
        "y": 840,
        "wires": []
    },
    {
        "id": "483e0105c1db5394",
        "type": "uib-sender",
        "z": "e1c0c9780ef1442c",
        "url": "home",
        "name": "",
        "topic": "",
        "passthrough": false,
        "return": false,
        "outputs": 0,
        "x": 830,
        "y": 1120,
        "wires": []
    },
    {
        "id": "5bdb3e673b3a1a32",
        "type": "inject",
        "z": "e1c0c9780ef1442c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1120,
        "wires": [
            [
                "58049fb082e4b034"
            ]
        ]
    },
    {
        "id": "58049fb082e4b034",
        "type": "influxdb in",
        "z": "e1c0c9780ef1442c",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "query": "from(bucket: \"homematic\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"name\"] == \"00-Flur-Licht\" or r[\"name\"] == \"00-Treppe-Licht\" or r[\"name\"] == \"00-Wohn-Licht\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"LEVEL\" or r[\"_measurement\"] == \"STATE\")\n  |> last()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "stHome",
        "x": 350,
        "y": 1120,
        "wires": [
            [
                "b9a64d1573623abb"
            ]
        ]
    },
    {
        "id": "b9a64d1573623abb",
        "type": "change",
        "z": "e1c0c9780ef1442c",
        "name": "indb/homematic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "indb/homematic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1120,
        "wires": [
            [
                "483e0105c1db5394",
                "6ce7bb4638b16d39"
            ]
        ]
    },
    {
        "id": "6ce7bb4638b16d39",
        "type": "debug",
        "z": "e1c0c9780ef1442c",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a0b69e2a0299aac9",
        "type": "link in",
        "z": "e1c0c9780ef1442c",
        "name": "link in 2",
        "links": [
            "16f623084ab3c45c",
            "b0595157eb15f6ba"
        ],
        "x": 165,
        "y": 1180,
        "wires": [
            [
                "58049fb082e4b034"
            ]
        ]
    },
    {
        "id": "7135dcb9800f8115",
        "type": "comment",
        "z": "e1c0c9780ef1442c",
        "name": "Send Status HM Lights",
        "info": "",
        "x": 140,
        "y": 1060,
        "wires": []
    },
    {
        "id": "fa8f8e0e04df3c58",
        "type": "inject",
        "z": "e1c0c9780ef1442c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1320,
        "wires": [
            [
                "ed143ab96e5059a6"
            ]
        ]
    },
    {
        "id": "ed143ab96e5059a6",
        "type": "influxdb in",
        "z": "e1c0c9780ef1442c",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "query": "from(bucket: \"hue\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"light\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> last(column: \"name\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "stHome",
        "x": 350,
        "y": 1320,
        "wires": [
            [
                "09d5df95de815567"
            ]
        ]
    },
    {
        "id": "09d5df95de815567",
        "type": "change",
        "z": "e1c0c9780ef1442c",
        "name": "indb/hue",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "indb/hue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1320,
        "wires": [
            [
                "43173c319c8f0761",
                "4c9d27e2675408dc"
            ]
        ]
    },
    {
        "id": "4c9d27e2675408dc",
        "type": "uib-sender",
        "z": "e1c0c9780ef1442c",
        "url": "home",
        "name": "",
        "topic": "",
        "passthrough": false,
        "return": false,
        "outputs": 0,
        "x": 830,
        "y": 1320,
        "wires": []
    },
    {
        "id": "43173c319c8f0761",
        "type": "debug",
        "z": "e1c0c9780ef1442c",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1400,
        "wires": []
    },
    {
        "id": "4254b51be531da74",
        "type": "link in",
        "z": "e1c0c9780ef1442c",
        "name": "link in 3",
        "links": [
            "b0595157eb15f6ba",
            "f6e0cdc821022ed9",
            "ad23091c1b4b008a",
            "03ba569749b8c39d"
        ],
        "x": 165,
        "y": 1380,
        "wires": [
            [
                "ed143ab96e5059a6"
            ]
        ]
    },
    {
        "id": "892f62584a0d87b2",
        "type": "comment",
        "z": "e1c0c9780ef1442c",
        "name": "Send Status HUE Lights",
        "info": "",
        "x": 150,
        "y": 1260,
        "wires": []
    },
    {
        "id": "918088e15fd8ab1c",
        "type": "switch",
        "z": "e1c0c9780ef1442c",
        "name": "",
        "property": "routing",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "indb/homematic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "indb/hue",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "f9f06c6622e6fdb1"
            ],
            [
                "11e2f2103fde0562"
            ],
            [
                "521eeb6b56d26fdf"
            ]
        ]
    },
    {
        "id": "f9f06c6622e6fdb1",
        "type": "link out",
        "z": "e1c0c9780ef1442c",
        "name": "ui_out_indb_homematic",
        "mode": "link",
        "links": [
            "3642ca7f2b534a85"
        ],
        "x": 695,
        "y": 160,
        "wires": []
    },
    {
        "id": "11e2f2103fde0562",
        "type": "link out",
        "z": "e1c0c9780ef1442c",
        "name": "ui_out_indb_hue",
        "mode": "link",
        "links": [
            "93054314950121e8",
            "12e444a3a9021a34",
            "01e597d539000acd"
        ],
        "x": 695,
        "y": 200,
        "wires": []
    },
    {
        "id": "3bea6c6b464b1fc2",
        "type": "debug",
        "z": "e1c0c9780ef1442c",
        "name": "UI Cmd Routing",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 460,
        "wires": []
    },
    {
        "id": "521eeb6b56d26fdf",
        "type": "change",
        "z": "e1c0c9780ef1442c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "error",
                "pt": "msg",
                "to": "Routing not found !!!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 460,
        "wires": [
            [
                "3bea6c6b464b1fc2"
            ]
        ]
    },
    {
        "id": "c967f85173505a3b",
        "type": "inject",
        "z": "e1c0c9780ef1442c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1560,
        "wires": [
            [
                "048285c4eae974bc"
            ]
        ]
    },
    {
        "id": "048285c4eae974bc",
        "type": "influxdb in",
        "z": "e1c0c9780ef1442c",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "query": "from(bucket: \"powerMan\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"soc\" or r[\"_measurement\"] == \"ac_Power\")\n  |> last()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "stHome",
        "x": 350,
        "y": 1560,
        "wires": [
            [
                "c18afedd47cb6e5f"
            ]
        ]
    },
    {
        "id": "c18afedd47cb6e5f",
        "type": "change",
        "z": "e1c0c9780ef1442c",
        "name": "indb/powerMan",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "indb/powerman",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1560,
        "wires": [
            [
                "049b7c007b529f7f",
                "53106936e017cb14"
            ]
        ]
    },
    {
        "id": "53106936e017cb14",
        "type": "uib-sender",
        "z": "e1c0c9780ef1442c",
        "url": "home",
        "name": "",
        "topic": "",
        "passthrough": false,
        "return": false,
        "outputs": 0,
        "x": 830,
        "y": 1560,
        "wires": []
    },
    {
        "id": "049b7c007b529f7f",
        "type": "debug",
        "z": "e1c0c9780ef1442c",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1640,
        "wires": []
    },
    {
        "id": "16e5f177fcc2e513",
        "type": "link in",
        "z": "e1c0c9780ef1442c",
        "name": "link in 14",
        "links": [
            "b0595157eb15f6ba",
            "f6e0cdc821022ed9",
            "ad23091c1b4b008a",
            "03ba569749b8c39d"
        ],
        "x": 165,
        "y": 1620,
        "wires": [
            [
                "048285c4eae974bc"
            ]
        ]
    },
    {
        "id": "8ffa78eacd5db222",
        "type": "comment",
        "z": "e1c0c9780ef1442c",
        "name": "Send PowerMan",
        "info": "",
        "x": 120,
        "y": 1500,
        "wires": []
    },
    {
        "id": "432644e91502c163",
        "type": "uib-sender",
        "z": "e1c0c9780ef1442c",
        "url": "home",
        "name": "",
        "topic": "",
        "passthrough": false,
        "return": false,
        "outputs": 0,
        "x": 2090,
        "y": 900,
        "wires": []
    },
    {
        "id": "40f4339679e546f9",
        "type": "inject",
        "z": "e1c0c9780ef1442c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1180,
        "y": 900,
        "wires": [
            [
                "f280dcf348096e65"
            ]
        ]
    },
    {
        "id": "f280dcf348096e65",
        "type": "influxdb in",
        "z": "e1c0c9780ef1442c",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "query": "s1 = from(bucket: \"homematic\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"LEVEL\")\n  |> filter(fn: (r) => r[\"channelType\"] == \"BLIND\" or r[\"channelType\"] == \"JALOUSIE\")\n  |> last()\n\ns2 = from(bucket: \"homematic\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"DIRECTION\")\n  |> filter(fn: (r) => r[\"channelType\"] == \"BLIND\")\n  |> filter(fn: (r) => r[\"type\"] == \"SYSVAR\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> last(column: \"name\")\n  \nunion(tables: [s1,s2])",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "stHome",
        "x": 1410,
        "y": 900,
        "wires": [
            [
                "26c35be548c8186b"
            ]
        ]
    },
    {
        "id": "a6027f478b5197f0",
        "type": "change",
        "z": "e1c0c9780ef1442c",
        "name": "indb/homematic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "indb/homematic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 900,
        "wires": [
            [
                "49b39e7e17aca69f",
                "432644e91502c163"
            ]
        ]
    },
    {
        "id": "49b39e7e17aca69f",
        "type": "debug",
        "z": "e1c0c9780ef1442c",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 980,
        "wires": []
    },
    {
        "id": "bc4901d171fd3d6d",
        "type": "link in",
        "z": "e1c0c9780ef1442c",
        "name": "link in 15",
        "links": [
            "16f623084ab3c45c",
            "b0595157eb15f6ba"
        ],
        "x": 1185,
        "y": 960,
        "wires": [
            [
                "f280dcf348096e65"
            ]
        ]
    },
    {
        "id": "b0f899be6daeb996",
        "type": "comment",
        "z": "e1c0c9780ef1442c",
        "name": "Send Shutter",
        "info": "",
        "x": 1170,
        "y": 840,
        "wires": []
    },
    {
        "id": "26c35be548c8186b",
        "type": "function",
        "z": "e1c0c9780ef1442c",
        "name": "function 17",
        "func": "msg.payload.forEach(e => {\n    if(e.type == \"SYSVAR\" && e.channelType == \"BLIND\") {\n        e._value = { value : e.value, mapping : e.mvalue }\n    }\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 900,
        "wires": [
            [
                "a6027f478b5197f0"
            ]
        ]
    },
    {
        "id": "08c58347de41adad",
        "type": "debug",
        "z": "40f5e7c72cdecaab",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 100,
        "wires": []
    },
    {
        "id": "81204cec10cc59fa",
        "type": "comment",
        "z": "40f5e7c72cdecaab",
        "name": "ccu/deviceName/datapoint",
        "info": "",
        "x": 330,
        "y": 100,
        "wires": []
    },
    {
        "id": "17525801781a0516",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "Transform",
        "func": "return {\n    topic: \"hm00/\" + msg.deviceName + \"/\" + msg.datapoint,\n    payload: msg.payload,\n    ccu : \"hm00\",\n    name: msg.deviceName,\n    datapoint: msg.datapoint,\n    channelType: msg.channelType,\n    deviceType: msg.deviceType};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 140,
        "wires": [
            [
                "adc5300179c0cf6a"
            ]
        ]
    },
    {
        "id": "58fd7081e276ba97",
        "type": "debug",
        "z": "40f5e7c72cdecaab",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 220,
        "wires": []
    },
    {
        "id": "dc507aa303d8f07a",
        "type": "ccu-rpc-event",
        "z": "40f5e7c72cdecaab",
        "name": "",
        "iface": "",
        "ccuConfig": "ca185c1af81e0a09",
        "rooms": "",
        "roomsRx": "str",
        "functions": "",
        "functionsRx": "str",
        "device": "",
        "deviceRx": "str",
        "deviceName": "",
        "deviceNameRx": "str",
        "deviceType": "",
        "deviceTypeRx": "str",
        "channel": "",
        "channelRx": "str",
        "channelName": "",
        "channelNameRx": "str",
        "channelType": "",
        "channelTypeRx": "str",
        "channelIndex": "",
        "channelIndexRx": "str",
        "datapoint": "",
        "datapointRx": "str",
        "change": true,
        "working": true,
        "cache": false,
        "topic": "${CCU}/${Interface}/${channelName}/${datapoint}",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "17525801781a0516",
                "58fd7081e276ba97"
            ]
        ]
    },
    {
        "id": "1bca9db95a3587df",
        "type": "influxdb out",
        "z": "40f5e7c72cdecaab",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "stHome",
        "bucket": "homematic",
        "x": 1090,
        "y": 140,
        "wires": []
    },
    {
        "id": "763919f3816edf8e",
        "type": "comment",
        "z": "40f5e7c72cdecaab",
        "name": "db insert command",
        "info": "",
        "x": 570,
        "y": 100,
        "wires": []
    },
    {
        "id": "adc5300179c0cf6a",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "indb data",
        "func": "var inMsg = {\n    measurement: msg.datapoint,\n    payload :\n    [{\n// fields\n        value: msg.payload\n    },\n    {\n// tags\n        ccu: msg.ccu,\n        type: msg.deviceType,\n        name: msg.name,\n        channelType: msg.channelType\n    }]\n}\n\nreturn inMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 140,
        "wires": [
            [
                "ed3fb0ed3a509031"
            ]
        ]
    },
    {
        "id": "b7c2c4ed945b8842",
        "type": "comment",
        "z": "40f5e7c72cdecaab",
        "name": "hm00",
        "info": "",
        "x": 90,
        "y": 60,
        "wires": []
    },
    {
        "id": "f439ff717cfe10d8",
        "type": "debug",
        "z": "40f5e7c72cdecaab",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 620,
        "wires": []
    },
    {
        "id": "b5395dfa58057544",
        "type": "comment",
        "z": "40f5e7c72cdecaab",
        "name": "ccu/deviceName/datapoint",
        "info": "",
        "x": 330,
        "y": 520,
        "wires": []
    },
    {
        "id": "b433994a3f70550e",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "Transform",
        "func": "return {\n    topic: \"hm02/\" + msg.deviceName + \"/\" + msg.datapoint,\n    payload: msg.payload,\n    ccu : \"hm02\",\n    name: msg.deviceName,\n    datapoint: msg.datapoint,\n    channelType: msg.channelType,\n    deviceType: msg.deviceType};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 560,
        "wires": [
            [
                "c9670ffa43cfaa1a"
            ]
        ]
    },
    {
        "id": "0d4f5f6d6b9bb5bc",
        "type": "debug",
        "z": "40f5e7c72cdecaab",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 640,
        "wires": []
    },
    {
        "id": "5a0dcc7d8875c10e",
        "type": "ccu-rpc-event",
        "z": "40f5e7c72cdecaab",
        "name": "",
        "iface": "",
        "ccuConfig": "6be926ebebb69961",
        "rooms": "",
        "roomsRx": "str",
        "functions": "",
        "functionsRx": "str",
        "device": "",
        "deviceRx": "str",
        "deviceName": "",
        "deviceNameRx": "str",
        "deviceType": "",
        "deviceTypeRx": "str",
        "channel": "",
        "channelRx": "str",
        "channelName": "",
        "channelNameRx": "str",
        "channelType": "",
        "channelTypeRx": "str",
        "channelIndex": "",
        "channelIndexRx": "str",
        "datapoint": "",
        "datapointRx": "str",
        "change": true,
        "working": false,
        "cache": false,
        "topic": "${CCU}/${Interface}/${channelName}/${datapoint}",
        "x": 100,
        "y": 560,
        "wires": [
            [
                "b433994a3f70550e",
                "0d4f5f6d6b9bb5bc"
            ]
        ]
    },
    {
        "id": "d41f98057e8efe63",
        "type": "influxdb out",
        "z": "40f5e7c72cdecaab",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "stHome",
        "bucket": "homematic",
        "x": 870,
        "y": 560,
        "wires": []
    },
    {
        "id": "b1e44a5dac46367e",
        "type": "comment",
        "z": "40f5e7c72cdecaab",
        "name": "db insert command",
        "info": "",
        "x": 570,
        "y": 520,
        "wires": []
    },
    {
        "id": "c9670ffa43cfaa1a",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "function 2",
        "func": "var inMsg = {\n    measurement: msg.datapoint,\n    payload :\n    [{\n// fields\n        value: msg.payload\n    },\n    {\n// tags\n        ccu: msg.ccu,\n        type: msg.deviceType,\n        name: msg.name,\n        channelType: msg.channelType\n    }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 560,
        "wires": [
            [
                "f439ff717cfe10d8",
                "d41f98057e8efe63"
            ]
        ]
    },
    {
        "id": "c6b7dca43779fd8c",
        "type": "comment",
        "z": "40f5e7c72cdecaab",
        "name": "hm02",
        "info": "",
        "x": 90,
        "y": 480,
        "wires": []
    },
    {
        "id": "015806c6b825f34f",
        "type": "ccu-sysvar",
        "z": "40f5e7c72cdecaab",
        "name": "System.Building.Mode",
        "ccuConfig": "ca185c1af81e0a09",
        "topic": "ReGaHSS/${Name}",
        "change": true,
        "cache": true,
        "x": 1620,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "8b02e8f4.68c08",
        "type": "ccu-sysvar",
        "z": "40f5e7c72cdecaab",
        "name": "00-Wohn-Shutter.Req",
        "ccuConfig": "ca185c1af81e0a09",
        "topic": "hm00/${Name}",
        "change": true,
        "cache": true,
        "x": 1620,
        "y": 680,
        "wires": [
            [
                "b7ef8d4bfc111457"
            ]
        ]
    },
    {
        "id": "28764797.9e911",
        "type": "ccu-sysvar",
        "z": "40f5e7c72cdecaab",
        "name": "00-All-Shutter.Req",
        "ccuConfig": "ca185c1af81e0a09",
        "topic": "hm00/${Name}",
        "change": true,
        "cache": true,
        "x": 1610,
        "y": 620,
        "wires": [
            [
                "b7ef8d4bfc111457"
            ]
        ]
    },
    {
        "id": "19a16d9205d63763",
        "type": "debug",
        "z": "40f5e7c72cdecaab",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 340,
        "wires": []
    },
    {
        "id": "ef9dcf1673702e72",
        "type": "delay",
        "z": "40f5e7c72cdecaab",
        "name": "",
        "pauseType": "queue",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1360,
        "y": 260,
        "wires": [
            [
                "16f623084ab3c45c",
                "19a16d9205d63763"
            ]
        ]
    },
    {
        "id": "16f623084ab3c45c",
        "type": "link out",
        "z": "40f5e7c72cdecaab",
        "name": "hm_trg_device",
        "mode": "link",
        "links": [
            "a0b69e2a0299aac9",
            "bc4901d171fd3d6d"
        ],
        "x": 1675,
        "y": 260,
        "wires": []
    },
    {
        "id": "5e0cb46b2bd0891f",
        "type": "comment",
        "z": "40f5e7c72cdecaab",
        "name": "Trigger Switch / Dimmer",
        "info": "",
        "x": 1340,
        "y": 220,
        "wires": []
    },
    {
        "id": "3642ca7f2b534a85",
        "type": "link in",
        "z": "40f5e7c72cdecaab",
        "name": "link in 9",
        "links": [
            "f9f06c6622e6fdb1"
        ],
        "x": 75,
        "y": 900,
        "wires": [
            [
                "9d7867bd68e1a5c4"
            ]
        ]
    },
    {
        "id": "9d7867bd68e1a5c4",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "set WORKING",
        "func": "var working = flow.get('hm_working') || false;\nworking = true;\nflow.set('hm_working', working);\n\nreturn {target : msg.target, payload : {\n    on : msg.command.status,\n    brightness : msg.command.level,\n    update : msg.command.update\n}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 900,
        "wires": [
            [
                "ecb28ecc06103ce8",
                "283875f27867f85f",
                "2c349b28c81ea48e"
            ]
        ]
    },
    {
        "id": "ecb28ecc06103ce8",
        "type": "switch",
        "z": "40f5e7c72cdecaab",
        "name": "",
        "property": "target",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "00-Wohn-Licht",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "00-Flur-Licht",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "00-Treppe-Licht",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 900,
        "wires": [
            [
                "3a7bb97ab9f8c813"
            ],
            [
                "d5b304d8feb0435d"
            ],
            [
                "661a78b8ca458fdc"
            ]
        ]
    },
    {
        "id": "5dcadd8912048d64",
        "type": "ccu-value",
        "z": "40f5e7c72cdecaab",
        "name": "",
        "iface": "BidCos-RF",
        "channel": "OEQ0331639:1 00-Wohn-Licht:1",
        "datapoint": "LEVEL",
        "mode": "",
        "start": true,
        "change": true,
        "cache": false,
        "queue": false,
        "on": 0,
        "onType": "undefined",
        "ramp": 0,
        "rampType": "undefined",
        "working": false,
        "ccuConfig": "ca185c1af81e0a09",
        "topic": "${CCU}/${Interface}/${channel}/${datapoint}",
        "x": 1060,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "283875f27867f85f",
        "type": "debug",
        "z": "40f5e7c72cdecaab",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 820,
        "wires": []
    },
    {
        "id": "3a7bb97ab9f8c813",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "function 11",
        "func": "if(msg.payload.update == \"status\") {\n    if (msg.payload.on == true) {\n        if (msg.payload.brightness == 0) { msg.payload.brightness = 100 }\n        return { payload: msg.payload.brightness / 100 }\n    } else {\n        return { payload: 0 }\n    }\n}\n\nreturn { payload: msg.payload.brightness / 100 }\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 840,
        "wires": [
            [
                "5dcadd8912048d64"
            ]
        ]
    },
    {
        "id": "d054918a52b019d7",
        "type": "ccu-value",
        "z": "40f5e7c72cdecaab",
        "name": "",
        "iface": "BidCos-RF",
        "channel": "NEQ1501427:1 00-Flur-Licht:1",
        "datapoint": "STATE",
        "mode": "",
        "start": true,
        "change": true,
        "cache": false,
        "queue": false,
        "on": 0,
        "onType": "undefined",
        "ramp": 0,
        "rampType": "undefined",
        "working": false,
        "ccuConfig": "ca185c1af81e0a09",
        "topic": "${CCU}/${Interface}/${channel}/${datapoint}",
        "x": 1060,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "d5b304d8feb0435d",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "function 12",
        "func": "return { payload : msg.payload.on == true}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 900,
        "wires": [
            [
                "d054918a52b019d7"
            ]
        ]
    },
    {
        "id": "661a78b8ca458fdc",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "function 13",
        "func": "return { payload : msg.payload.on == true}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 960,
        "wires": [
            [
                "1b140b4328a0b7fc"
            ]
        ]
    },
    {
        "id": "1b140b4328a0b7fc",
        "type": "ccu-value",
        "z": "40f5e7c72cdecaab",
        "name": "",
        "iface": "BidCos-RF",
        "channel": "OEQ0569149:1 00-Treppe-Licht:1",
        "datapoint": "STATE",
        "mode": "",
        "start": true,
        "change": true,
        "cache": false,
        "queue": false,
        "on": 0,
        "onType": "undefined",
        "ramp": 0,
        "rampType": "undefined",
        "working": false,
        "ccuConfig": "ca185c1af81e0a09",
        "topic": "${CCU}/${Interface}/${channel}/${datapoint}",
        "x": 1070,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "d3e771b33c626ea5",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "trg switch/dimmer",
        "func": "var working = flow.get('hm_working') || false;\n\nif (working == false) {\n    var chType = msg.payload[1].channelType;\n    if (chType == \"SWITCH\" || chType == \"DIMMER\" || chType == \"BLIND\")\n    {\n        var trg = {\n            topic: \"homematic/trigger\",\n            chType: chType,\n            type : \"trigger\"\n        }\n        return trg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 260,
        "wires": [
            [
                "ef9dcf1673702e72"
            ]
        ]
    },
    {
        "id": "2c349b28c81ea48e",
        "type": "delay",
        "z": "40f5e7c72cdecaab",
        "name": "is WORKING",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "29f9b0a90a5c3d3e"
            ]
        ]
    },
    {
        "id": "29f9b0a90a5c3d3e",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "reset WORKING",
        "func": "var working = flow.get('hm_working') || false;\nworking = false;\nflow.set('hm_working', working);\n\nvar trg = {\n    topic: \"homematic/trigger/command\",\n    payload: \"command\",\n    type: \"trigger\"\n}\nreturn trg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1040,
        "wires": [
            [
                "1793207a9e3712a9",
                "21cc5d5dda698c46"
            ]
        ]
    },
    {
        "id": "1793207a9e3712a9",
        "type": "link out",
        "z": "40f5e7c72cdecaab",
        "name": "hm_working_reset_trg",
        "mode": "link",
        "links": [
            "7c5aa62944c65b89"
        ],
        "x": 855,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7c5aa62944c65b89",
        "type": "link in",
        "z": "40f5e7c72cdecaab",
        "name": "link in 10",
        "links": [
            "1793207a9e3712a9"
        ],
        "x": 995,
        "y": 320,
        "wires": [
            [
                "ef9dcf1673702e72"
            ]
        ]
    },
    {
        "id": "21cc5d5dda698c46",
        "type": "debug",
        "z": "40f5e7c72cdecaab",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1120,
        "wires": []
    },
    {
        "id": "e8a4f254ed0497fe",
        "type": "ccu-sysvar",
        "z": "40f5e7c72cdecaab",
        "name": "01-Bad-Shutter.Req",
        "ccuConfig": "ca185c1af81e0a09",
        "topic": "hm00/${Name}",
        "change": true,
        "cache": true,
        "x": 1620,
        "y": 740,
        "wires": [
            [
                "b7ef8d4bfc111457"
            ]
        ]
    },
    {
        "id": "135e6ef11eb0c7e2",
        "type": "ccu-sysvar",
        "z": "40f5e7c72cdecaab",
        "name": "01-Kind1-Shutter.Req",
        "ccuConfig": "ca185c1af81e0a09",
        "topic": "hm00/${Name}",
        "change": true,
        "cache": true,
        "x": 1620,
        "y": 800,
        "wires": [
            [
                "b7ef8d4bfc111457"
            ]
        ]
    },
    {
        "id": "1885621fa247705a",
        "type": "ccu-sysvar",
        "z": "40f5e7c72cdecaab",
        "name": "01-Kind2-Shutter.Req",
        "ccuConfig": "ca185c1af81e0a09",
        "topic": "hm00/${Name}",
        "change": true,
        "cache": true,
        "x": 1620,
        "y": 860,
        "wires": [
            [
                "b7ef8d4bfc111457"
            ]
        ]
    },
    {
        "id": "d3a1df6c2c36fd82",
        "type": "ccu-sysvar",
        "z": "40f5e7c72cdecaab",
        "name": "02-Schlaf-Shutter.Req",
        "ccuConfig": "ca185c1af81e0a09",
        "topic": "hm00/${Name}",
        "change": true,
        "cache": true,
        "x": 1620,
        "y": 920,
        "wires": [
            [
                "b7ef8d4bfc111457"
            ]
        ]
    },
    {
        "id": "fc3a499bcbf23fbe",
        "type": "debug",
        "z": "40f5e7c72cdecaab",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2420,
        "y": 580,
        "wires": []
    },
    {
        "id": "b7ef8d4bfc111457",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "Transform",
        "func": "return {\n    topic: \"hm00/\" + msg.name + \"/DIRECTION\",\n    payload: msg.payload,\n    mpayload: msg.enum[msg.payload],\n    ccu : \"hm00\",\n    name: msg.name,\n    datapoint: \"DIRECTION\",\n    channelType: \"BLIND\",\n    deviceType: msg.type};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 680,
        "wires": [
            [
                "f93a0857ccd7928c"
            ]
        ]
    },
    {
        "id": "f93a0857ccd7928c",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "indb data",
        "func": "var inMsg = {\n    measurement: msg.datapoint,\n    payload :\n    [{\n// fields\n        value: msg.payload,\n        mvalue: msg.mpayload\n    },\n    {\n// tags\n        ccu: msg.ccu,\n        type: msg.deviceType,\n        name: msg.name,\n        channelType: msg.channelType\n    }]\n}\n\nreturn inMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 680,
        "wires": [
            [
                "fc3a499bcbf23fbe",
                "b9372983d74af4bb"
            ]
        ]
    },
    {
        "id": "ed3fb0ed3a509031",
        "type": "function",
        "z": "40f5e7c72cdecaab",
        "name": "dummy",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 140,
        "wires": [
            [
                "1bca9db95a3587df",
                "08c58347de41adad",
                "d3e771b33c626ea5"
            ]
        ]
    },
    {
        "id": "b9372983d74af4bb",
        "type": "link out",
        "z": "40f5e7c72cdecaab",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "b56ba630da045f02"
        ],
        "x": 2275,
        "y": 680,
        "wires": []
    },
    {
        "id": "b56ba630da045f02",
        "type": "link in",
        "z": "40f5e7c72cdecaab",
        "name": "hm00_data_feedin",
        "links": [
            "b9372983d74af4bb"
        ],
        "x": 655,
        "y": 220,
        "wires": [
            [
                "ed3fb0ed3a509031"
            ]
        ]
    },
    {
        "id": "654cfb4278a59162",
        "type": "comment",
        "z": "40f5e7c72cdecaab",
        "name": "hm00 shutter requests",
        "info": "",
        "x": 1620,
        "y": 540,
        "wires": []
    },
    {
        "id": "b941877f.c738b8",
        "type": "comment",
        "z": "eda35aea761e62ca",
        "name": "Mode",
        "info": "",
        "x": 90,
        "y": 60,
        "wires": []
    },
    {
        "id": "faea28f7.f59ef8",
        "type": "comment",
        "z": "eda35aea761e62ca",
        "name": "0=Sofort, 1=Min+PV, 2=PV, 3=Stop, 4=Standby",
        "info": "",
        "x": 220,
        "y": 100,
        "wires": []
    },
    {
        "id": "98b9695d.a10238",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/global/ChargeMode",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "inputs": 0,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "8f9a7c28e4b76e19"
            ]
        ]
    },
    {
        "id": "cfc49c92.355e6",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/config/get/pv/priorityModeEVBattery",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 210,
        "y": 240,
        "wires": [
            [
                "03c802a55cc00d42"
            ]
        ]
    },
    {
        "id": "8f9a7c28e4b76e19",
        "type": "function",
        "z": "eda35aea761e62ca",
        "name": "Transform",
        "func": "var cMode = msg.payload * 1;\nvar cmMode = \"Stop\";\nif (cMode === 0) { cmMode = \"Sofort\" }\nif (cMode === 1) { cmMode = \"Mini+PV\" }\nif (cMode === 2) { cmMode = \"PV\" }\nif (cMode === 3) { cmMode = \"Stop\" }\nif (cMode === 4) { cmMode = \"Standby\" }\n\nvar inMsg = {\n    measurement: \"chargeMode\",\n    payload:\n        [{\n            // fields\n            value: cMode,\n        },\n        {\n            // tags\n            type: \"openWB\",\n            group: \"wallbox\",\n            lp: 1,\n            valueN: cmMode\n        }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 160,
        "wires": [
            [
                "4baded220266cd06"
            ]
        ]
    },
    {
        "id": "4baded220266cd06",
        "type": "influxdb out",
        "z": "eda35aea761e62ca",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "stHome",
        "bucket": "ev",
        "x": 1030,
        "y": 160,
        "wires": []
    },
    {
        "id": "03c802a55cc00d42",
        "type": "function",
        "z": "eda35aea761e62ca",
        "name": "Transform",
        "func": "var cMode = msg.payload * 1;\nvar cmMode = \"Battery\";\nif (cMode === 0) { cmMode = \"Battery\" }\nif (cMode === 1) { cmMode = \"Car\" }\n\nvar inMsg = {\n    measurement: \"priorityModeEVBattery\",\n    payload:\n        [{\n            // fields\n            value: cMode,\n        },\n        {\n            // tags\n            type: \"openWB\",\n            group: \"wallbox\",\n            name: \"priorityModeEVBattery\",\n            lp: 1,\n            valueN: cmMode\n        }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 240,
        "wires": [
            [
                "4baded220266cd06"
            ]
        ]
    },
    {
        "id": "97d4e952.42ff7",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/lp/1/boolPlugStat",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "inputs": 0,
        "x": 150,
        "y": 380,
        "wires": [
            [
                "b5dd78b133116ebb"
            ]
        ]
    },
    {
        "id": "7cdb89e4.c626f8",
        "type": "comment",
        "z": "eda35aea761e62ca",
        "name": "LP 1",
        "info": "",
        "x": 90,
        "y": 340,
        "wires": []
    },
    {
        "id": "969ea805.4712b",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/lp/1/ChargePointEnabled",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "inputs": 0,
        "x": 180,
        "y": 440,
        "wires": [
            [
                "872f4374027e6c37"
            ]
        ]
    },
    {
        "id": "bc5a1df2.ed2c6",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/lp/1/W",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "inputs": 0,
        "x": 120,
        "y": 620,
        "wires": [
            [
                "a8c82aedb2179bab"
            ]
        ]
    },
    {
        "id": "77de4e7c.005e7",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/lp/1/ChargeStatus",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "inputs": 0,
        "x": 150,
        "y": 500,
        "wires": [
            [
                "1dd693d40e769231"
            ]
        ]
    },
    {
        "id": "8a891ff.74ccf6",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/lp/1/kWhDailyCharged",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "inputs": 0,
        "x": 170,
        "y": 560,
        "wires": [
            [
                "dee88783f6941872"
            ]
        ]
    },
    {
        "id": "8ef260b7.8e29a",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/config/get/sofort/lp/1/current",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "inputs": 0,
        "x": 190,
        "y": 680,
        "wires": [
            [
                "67b5be6db5ab08ac"
            ]
        ]
    },
    {
        "id": "ab7f6dbc.dc8108",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/lp/1/AConfigured",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "inputs": 0,
        "x": 150,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "799d7fd2.c6df4",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/lp/1/%Soc",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "inputs": 0,
        "x": 130,
        "y": 800,
        "wires": [
            [
                "e43319bbf297a9cc"
            ]
        ]
    },
    {
        "id": "62b6b174.a61c2",
        "type": "mqtt in",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/lp/1/socFaultState",
        "qos": "2",
        "datatype": "auto",
        "broker": "25b4ae1f.f6e792",
        "inputs": 0,
        "x": 150,
        "y": 860,
        "wires": [
            [
                "f03fa9bb0ab4fa65"
            ]
        ]
    },
    {
        "id": "174cd797435d7af6",
        "type": "function",
        "z": "eda35aea761e62ca",
        "name": "Transform",
        "func": "var inMsg = {\n    measurement: msg.topic,\n    payload:\n        [{\n            // fields\n            value: msg.payload * 1,\n        },\n        {\n            // tags\n            type: \"openWB\",\n            group: \"wallbox\",\n            lp: 1\n        }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 380,
        "wires": [
            [
                "4baded220266cd06"
            ]
        ]
    },
    {
        "id": "b5dd78b133116ebb",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "plugState",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "plugState",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 380,
        "wires": [
            [
                "174cd797435d7af6"
            ]
        ]
    },
    {
        "id": "872f4374027e6c37",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "chargePointEnabled",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "chargePointEnabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 440,
        "wires": [
            [
                "174cd797435d7af6"
            ]
        ]
    },
    {
        "id": "1dd693d40e769231",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "chargeStatus",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "chargeStatus",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 500,
        "wires": [
            [
                "174cd797435d7af6"
            ]
        ]
    },
    {
        "id": "a8c82aedb2179bab",
        "type": "function",
        "z": "eda35aea761e62ca",
        "name": "Transform",
        "func": "var inMsg = {\n    measurement: \"currentPower\",\n    payload:\n        [{\n            // fields\n            value: (msg.payload / 1000).toFixed(2),\n        },\n        {\n            // tags\n            type: \"openWB\",\n            group: \"wallbox\",\n            lp: 1,\n            unit: \"kWh\"\n        }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 620,
        "wires": [
            [
                "4baded220266cd06"
            ]
        ]
    },
    {
        "id": "dee88783f6941872",
        "type": "function",
        "z": "eda35aea761e62ca",
        "name": "Transform",
        "func": "var inMsg = {\n    measurement: \"powerDailyCharged\",\n    payload:\n        [{\n            // fields\n            value: msg.payload/1000,\n        },\n        {\n            // tags\n            type: \"openWB\",\n            group: \"wallbox\",\n            lp: 1,\n            unit: \"kWh\"\n        }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 560,
        "wires": [
            [
                "4baded220266cd06"
            ]
        ]
    },
    {
        "id": "67b5be6db5ab08ac",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "currentInModeNow",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "currentInModeNow",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 680,
        "wires": [
            [
                "174cd797435d7af6"
            ]
        ]
    },
    {
        "id": "1645d60a4bb9c83a",
        "type": "function",
        "z": "eda35aea761e62ca",
        "name": "Transform",
        "func": "var inMsg = {\n    measurement: msg.topic,\n    payload:\n        [{\n            // fields\n            value: msg.payload*1,\n        },\n        {\n            // tags\n            type: \"smartEQ\",\n            group: \"car\",\n            number: 1\n        }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 800,
        "wires": [
            [
                "4baded220266cd06"
            ]
        ]
    },
    {
        "id": "e43319bbf297a9cc",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "carSoc",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "carSoc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 800,
        "wires": [
            [
                "1645d60a4bb9c83a"
            ]
        ]
    },
    {
        "id": "f03fa9bb0ab4fa65",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "carSocFaultState",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "carSocFaultState",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 860,
        "wires": [
            [
                "1645d60a4bb9c83a"
            ]
        ]
    },
    {
        "id": "a1d4b2a2.c40f5",
        "type": "comment",
        "z": "eda35aea761e62ca",
        "name": "Reset NightPlan",
        "info": "",
        "x": 120,
        "y": 980,
        "wires": []
    },
    {
        "id": "f6a9501b.71959",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "Stop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1020,
        "wires": [
            [
                "c9db06e6.8dfe2"
            ]
        ]
    },
    {
        "id": "e1edcaa2.5c0ed8",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "PV",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1080,
        "wires": [
            [
                "c9db06e6.8dfe2"
            ]
        ]
    },
    {
        "id": "a24f8b94.8417f",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "Sofort",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1140,
        "wires": [
            [
                "c9db06e6.8dfe2"
            ]
        ]
    },
    {
        "id": "c9db06e6.8dfe2",
        "type": "mqtt out",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/set/ChargeMode",
        "qos": "",
        "retain": "",
        "broker": "25b4ae1f.f6e792",
        "x": 1310,
        "y": 1040,
        "wires": []
    },
    {
        "id": "5432d8cb.a853c8",
        "type": "cronplus",
        "z": "eda35aea761e62ca",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "schedule1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 30 7 * * ? *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 130,
        "y": 1020,
        "wires": [
            [
                "f6a9501b.71959"
            ]
        ]
    },
    {
        "id": "d6da8519.083a7",
        "type": "cronplus",
        "z": "eda35aea761e62ca",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "schedule1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 31 7 * * ? *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 130,
        "y": 1080,
        "wires": [
            [
                "e1edcaa2.5c0ed8",
                "0553801f7759e3df"
            ]
        ]
    },
    {
        "id": "d44740d6608a5244",
        "type": "mqtt out",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/config/set/sofort/lp/1/current",
        "qos": "",
        "retain": "",
        "broker": "25b4ae1f.f6e792",
        "x": 1350,
        "y": 1220,
        "wires": []
    },
    {
        "id": "0553801f7759e3df",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "8A",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "8",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1220,
        "wires": [
            [
                "d44740d6608a5244"
            ]
        ]
    },
    {
        "id": "7904bcad6605e926",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "16A",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "16",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1260,
        "wires": [
            [
                "d44740d6608a5244"
            ]
        ]
    },
    {
        "id": "b2a08f5c1617f513",
        "type": "mqtt out",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/config/set/sofort/lp/1/chargeLimitation",
        "qos": "",
        "retain": "",
        "broker": "25b4ae1f.f6e792",
        "x": 1380,
        "y": 1380,
        "wires": []
    },
    {
        "id": "8323fb8551540846",
        "type": "comment",
        "z": "eda35aea761e62ca",
        "name": "0 = none 1 = Energiemenge 2 = EV-SoC",
        "info": "0 = none\n1 = Energiemenge\n2 = EV-SoC",
        "x": 1360,
        "y": 1340,
        "wires": []
    },
    {
        "id": "b4558168fdde509a",
        "type": "mqtt out",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/config/set/sofort/lp/1/socToChargeTo",
        "qos": "",
        "retain": "",
        "broker": "25b4ae1f.f6e792",
        "x": 1380,
        "y": 1520,
        "wires": []
    },
    {
        "id": "076a40fb1f85059d",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "SOC = 75%",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "75",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1520,
        "wires": [
            [
                "b4558168fdde509a"
            ]
        ]
    },
    {
        "id": "62ee48c2362f4fd8",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "None",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1380,
        "wires": [
            [
                "b2a08f5c1617f513"
            ]
        ]
    },
    {
        "id": "aa8b5ca684d7bf49",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "EV-SoC",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1420,
        "wires": [
            [
                "b2a08f5c1617f513"
            ]
        ]
    },
    {
        "id": "badf80d98ca28d2f",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "Energy",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1760,
        "wires": [
            [
                "b2a08f5c1617f513"
            ]
        ]
    },
    {
        "id": "ee2628cd97611584",
        "type": "mqtt out",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "openWB/config/set/sofort/lp/1/energyToCharge",
        "qos": "",
        "retain": "",
        "broker": "25b4ae1f.f6e792",
        "x": 1380,
        "y": 1820,
        "wires": []
    },
    {
        "id": "41d3d89ae35d1bc7",
        "type": "change",
        "z": "eda35aea761e62ca",
        "name": "Energy=6 kWh",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "6",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1820,
        "wires": [
            [
                "ee2628cd97611584"
            ]
        ]
    },
    {
        "id": "5ea714c36d0b07b8",
        "type": "influxdb in",
        "z": "eda35aea761e62ca",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "00-Outdoor-Temp.vNorth:Temperature",
        "query": "from(bucket: \"homematic\")\n  |> range(start: -5h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"TEMPERATURE\")\n  |> filter(fn: (r) => r[\"name\"] == \"00-Outdoor-Temp.vNorth\")\n  |> last()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "stHome",
        "x": 390,
        "y": 1380,
        "wires": [
            [
                "b9a70645.25553"
            ]
        ]
    },
    {
        "id": "d85b387ddbde7469",
        "type": "cronplus",
        "z": "eda35aea761e62ca",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "schedule1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 00 7 * * ? *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 140,
        "y": 1380,
        "wires": [
            [
                "5ea714c36d0b07b8"
            ]
        ]
    },
    {
        "id": "b9a70645.25553",
        "type": "switch",
        "z": "eda35aea761e62ca",
        "name": "",
        "property": "payload[0]._value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "15",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 1380,
        "wires": [
            [
                "a24f8b94.8417f",
                "0553801f7759e3df",
                "62ee48c2362f4fd8"
            ]
        ]
    },
    {
        "id": "2e65c677545e55bf",
        "type": "comment",
        "z": "eda35aea761e62ca",
        "name": "EV Conditioning",
        "info": "",
        "x": 140,
        "y": 1340,
        "wires": []
    },
    {
        "id": "42f1e37ac6f7459e",
        "type": "comment",
        "z": "eda35aea761e62ca",
        "name": "Charge SOC",
        "info": "",
        "x": 130,
        "y": 1480,
        "wires": []
    },
    {
        "id": "c95b662a00ae1739",
        "type": "influxdb in",
        "z": "eda35aea761e62ca",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "socFaultState",
        "query": "from(bucket: \"ev\")\n  |> range(start: -5h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"carSocFaultState\")\n  |> filter(fn: (r) => r[\"type\"] == \"smartEQ\")\n  |> last()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "stHome",
        "x": 320,
        "y": 1540,
        "wires": [
            [
                "fc699d50d6a9aabb"
            ]
        ]
    },
    {
        "id": "fd02639b9aefa1dd",
        "type": "cronplus",
        "z": "eda35aea761e62ca",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "schedule1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 00 6 * * ? *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 140,
        "y": 1540,
        "wires": [
            [
                "c95b662a00ae1739"
            ]
        ]
    },
    {
        "id": "fc699d50d6a9aabb",
        "type": "switch",
        "z": "eda35aea761e62ca",
        "name": "",
        "property": "payload[0]._value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 1540,
        "wires": [
            [
                "a24f8b94.8417f",
                "aa8b5ca684d7bf49",
                "076a40fb1f85059d",
                "7904bcad6605e926"
            ],
            [
                "a24f8b94.8417f",
                "badf80d98ca28d2f",
                "41d3d89ae35d1bc7",
                "7904bcad6605e926"
            ]
        ]
    },
    {
        "id": "3a279a63d5b73b35",
        "type": "comment",
        "z": "eda35aea761e62ca",
        "name": "Pass values to wallbox",
        "info": "",
        "x": 160,
        "y": 2020,
        "wires": []
    },
    {
        "id": "fe3402e4e8dc65db",
        "type": "influxdb in",
        "z": "eda35aea761e62ca",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "query": "from(bucket: \"powerMan\")\n  |> range(start: -1h)\n  |> last()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "stHome",
        "x": 390,
        "y": 2080,
        "wires": [
            [
                "7ff69c831ff6d77d"
            ]
        ]
    },
    {
        "id": "299e291c4e203802",
        "type": "inject",
        "z": "eda35aea761e62ca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "25",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 2080,
        "wires": [
            [
                "fe3402e4e8dc65db"
            ]
        ]
    },
    {
        "id": "7ff69c831ff6d77d",
        "type": "function",
        "z": "eda35aea761e62ca",
        "name": "Find data in result",
        "func": "var ret = {};\nret.payload = {};\n\nvar solarPower = 0;\n\nmsg.payload.forEach(el => {\n\n    if(el.type === \"battery\"){\n        if(el._measurement === \"soc\") { ret.payload[\"openWB/set/houseBattery/%Soc\"] = el._value }\n        if (el._measurement === \"ac_Power\") { ret.payload[\"openWB/set/houseBattery/W\"] = el._value*(-1000) }\n    }\n\n    if (el.type === \"evu-meter\" && el.instance === \"1\" && el.location === \"basement\") {\n        if (el._measurement === \"ac_Voltage_AN\") { ret.payload[\"openWB/set/evu/VPhase1\"] = el._value }\n        if (el._measurement === \"ac_Voltage_BN\") { ret.payload[\"openWB/set/evu/VPhase2\"] = el._value }\n        if (el._measurement === \"ac_Voltage_CN\") { ret.payload[\"openWB/set/evu/VPhase3\"] = el._value }\n        if (el._measurement === \"ac_Current_A\") { ret.payload[\"openWB/set/evu/APhase1\"] = el._value }\n        if (el._measurement === \"ac_Current_B\") { ret.payload[\"openWB/set/evu/APhase2\"] = el._value }\n        if (el._measurement === \"ac_Current_C\") { ret.payload[\"openWB/set/evu/APhase3\"] = el._value }\n        if (el._measurement === \"ac_Power_A\") { ret.payload[\"openWB/evu/WPhase1\"] = el._value*1000 }\n        if (el._measurement === \"ac_Power_B\") { ret.payload[\"openWB/evu/WPhase2\"] = el._value*1000 }\n        if (el._measurement === \"ac_Power_C\") { ret.payload[\"openWB/evu/WPhase3\"] = el._value*1000 }\n        if (el._measurement === \"ac_Freq\") { ret.payload[\"openWB/set/evu/HzFrequenz\"] = el._value }\n        if (el._measurement === \"ac_PF_A\") { ret.payload[\"openWB/evu/PfPhase1\"] = el._value }\n        if (el._measurement === \"ac_PF_B\") { ret.payload[\"openWB/evu/PfPhase2\"] = el._value }\n        if (el._measurement === \"ac_PF_C\") { ret.payload[\"openWB/evu/PfPhase3\"] = el._value }\n        if (el._measurement === \"ac_Power\") { ret.payload[\"openWB/set/evu/W\"] = el._value*(1000) }\n    }\n\n    if(el.type === \"inverter\"){\n        if (el._measurement === \"ac_Power\") { solarPower = solarPower + (el._value * 1000) }\n    }\n\n})\n\nret.payload[\"openWB/set/pv/1/W\"] = solarPower;\n\nreturn [ret, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2080,
        "wires": [
            [
                "e9f78dd6.fd1e5",
                "d32058da1d1a72d7"
            ],
            [
                "f752732d9861cebe"
            ]
        ]
    },
    {
        "id": "d32058da1d1a72d7",
        "type": "debug",
        "z": "eda35aea761e62ca",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 2160,
        "wires": []
    },
    {
        "id": "e9f78dd6.fd1e5",
        "type": "split",
        "z": "eda35aea761e62ca",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 970,
        "y": 2080,
        "wires": [
            [
                "cd19f4f5.e9f1e"
            ]
        ]
    },
    {
        "id": "cd19f4f5.e9f1e",
        "type": "function",
        "z": "eda35aea761e62ca",
        "name": "add topic",
        "func": "msg.topic = msg.parts.key\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 2080,
        "wires": [
            [
                "37b732c9.8cdfb6"
            ]
        ]
    },
    {
        "id": "37b732c9.8cdfb6",
        "type": "rbe",
        "z": "eda35aea761e62ca",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1270,
        "y": 2080,
        "wires": [
            [
                "5a4fcb90.c10b84"
            ]
        ]
    },
    {
        "id": "5a4fcb90.c10b84",
        "type": "mqtt out",
        "z": "eda35aea761e62ca",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "25b4ae1f.f6e792",
        "x": 1420,
        "y": 2080,
        "wires": []
    },
    {
        "id": "f752732d9861cebe",
        "type": "debug",
        "z": "eda35aea761e62ca",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 2200,
        "wires": []
    },
    {
        "id": "ba1fed775a9a4167",
        "type": "comment",
        "z": "16d854753ce10409",
        "name": "WR Gartenhaus",
        "info": "",
        "x": 120,
        "y": 520,
        "wires": []
    },
    {
        "id": "33449a937d186c07",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "mod -> JSON",
        "func": "// Create new Buffer based on array bytes\nconst buf = Buffer.from(msg.payload.buffer);\n\nvar col = { \ntopic: \"seCal\",\npayload: [\n    {k: 'ac_Power', v: round(int16(40084) * scalefactor(40085) / 1000, 2)}, //I_AC_Power\n    {k: 'dc_Power', v: round(int16(40101) * scalefactor(40102) / 1000, 2)}  // I_DC_Power\n]}\n\nreturn col;\n\nfunction word(address) {\n    // Find the correct offset in bytes\n    // 40070 is the starting address we fetch from SolarEdge inverter\n    return (address-40084) * 2;\n}\n\nfunction scalefactor(address) {\n    return Math.pow(10, buf.readInt16BE(word(address)));\n}\n\nfunction int16(address) {\n    return buf.readInt16BE(word(address))\n}\n\nfunction uint16(address) {\n    return buf.readUInt16BE(word(address));\n}\n\nfunction int32(address) {\n    return buf.readInt32BE(word(address))\n}\n\nfunction uint32(address) {\n    return buf.readUInt32BE(word(address))\n}\n\nfunction round(value, decimals) {\n return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 560,
        "wires": [
            [
                "ffcb42308459e88d"
            ]
        ]
    },
    {
        "id": "ffcb42308459e88d",
        "type": "split",
        "z": "16d854753ce10409",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1010,
        "y": 560,
        "wires": [
            [
                "b8859a467c0a5dda"
            ]
        ]
    },
    {
        "id": "b8859a467c0a5dda",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "Transform",
        "func": "var inMsg = {\n    measurement: msg.payload.k,\n    payload:\n        [{\n            // fields\n            value: msg.payload.v,\n        },\n        {\n            // tags\n            vendor: \"solaredge\",\n            group: \"pv\",\n            location: \"shelter\",\n            type: \"inverter\",\n            instance: 2\n        }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 560,
        "wires": [
            [
                "7da1c7bf5f0d6c09",
                "38413cfbad00b12d"
            ]
        ]
    },
    {
        "id": "7da1c7bf5f0d6c09",
        "type": "debug",
        "z": "16d854753ce10409",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 560,
        "wires": []
    },
    {
        "id": "38413cfbad00b12d",
        "type": "influxdb out",
        "z": "16d854753ce10409",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "stHome",
        "bucket": "powerMan",
        "x": 1570,
        "y": 160,
        "wires": []
    },
    {
        "id": "f61f19d0.2a7438",
        "type": "comment",
        "z": "16d854753ce10409",
        "name": "Fetch Solaredge TCP modbus data",
        "info": "zsdfzsdfg",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "fa527835.e14da",
        "type": "comment",
        "z": "16d854753ce10409",
        "name": "WR Dach",
        "info": "",
        "x": 100,
        "y": 100,
        "wires": []
    },
    {
        "id": "6602d1b7.b24d78",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "mod -> JSON",
        "func": "// Create new Buffer based on array bytes\nconst buf = Buffer.from(msg.payload.buffer);\n\nvar col = {\n    topic: \"seCal\",\n    payload: [\n        { k: 'ac_PowerReal', v: round(int16(40084) * scalefactor(40085) / 1000, 2) },\n        //{ k: 'dc_Power', v: round(int16(40101) * scalefactor(40102) / 1000, 2) }\n        // solar power will be calculated dc/ac-solar = inv_ac_Power - bat_dc_Power\n    ]\n}\nreturn col;\n\nfunction word(address) {\n    // Find the correct offset in bytes\n    // 40070 is the starting address we fetch from SolarEdge inverter\n    return (address-40084) * 2;\n}\n\nfunction scalefactor(address) {\n    return Math.pow(10, buf.readInt16BE(word(address)));\n}\n\nfunction int16(address) {\n    return buf.readInt16BE(word(address))\n}\n\nfunction uint16(address) {\n    return buf.readUInt16BE(word(address));\n}\n\nfunction int32(address) {\n    return buf.readInt32BE(word(address))\n}\n\nfunction uint32(address) {\n    return buf.readUInt32BE(word(address))\n}\n\nfunction round(value, decimals) {\n return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 160,
        "wires": [
            [
                "f181a24885a1a36e"
            ]
        ]
    },
    {
        "id": "a987abfaf067f0d7",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "mod -> JSON",
        "func": "// Create new Buffer based on array bytes\nconst buf = Buffer.from(msg.payload.buffer);\n\nvar col = {\n    topic: \"seCal\",\n    payload: [\n        { k: 'ac_Current', v: round(int16(40191) * scalefactor(40195), 2) },\n        { k: 'ac_Current_A', v: round(int16(40192) * scalefactor(40195), 2) },\n        { k: 'ac_Current_B', v: round(int16(40193) * scalefactor(40195), 2)},\n        { k: 'ac_Current_C', v: round(int16(40194) * scalefactor(40195), 2)},\n        { k: 'ac_Voltage_AN', v: round(int16(40197) * scalefactor(40204), 2)},\n        { k: 'ac_Voltage_BN', v: round(int16(40198) * scalefactor(40204), 2)},\n        { k: 'ac_Voltage_CN', v: round(int16(40199) * scalefactor(40204), 2)},\n        { k: 'ac_Power', v: round(int16(40207) * scalefactor(40211) / (-1000), 2)},\n        { k: 'ac_Power_A', v: round(int16(40208) * scalefactor(40211) / (-1000), 2)},\n        { k: 'ac_Power_B', v: round(int16(40209) * scalefactor(40211) / (-1000), 2)},\n        { k: 'ac_Power_C', v: round(int16(40210) * scalefactor(40211) / (-1000), 2)},\n        { k: 'ac_Freq', v: round(int16(40205) * scalefactor(40206), 2)},\n        { k: 'ac_PF', v: round(int16(40222) * scalefactor(40226) / 100, 2)},\n        { k: 'ac_PF_A', v: round(int16(40223) * scalefactor(40226) / 100, 2)},\n        { k: 'ac_PF_B', v: round(int16(40224) * scalefactor(40226) / 100, 2)},\n        { k: 'ac_PF_C', v: round(int16(40225) * scalefactor(40226) / 100, 2)},\n        { k: 'ac_VAR', v: round(int16(40217) * scalefactor(40221) / 1000, 2)},\n        { k: 'ac_VAR_A', v: round(int16(40218) * scalefactor(40221) / 1000, 2)},\n        { k: 'ac_VAR_B', v: round(int16(40219) * scalefactor(40221) / 1000, 2)},\n        { k: 'ac_VAR_C', v: round(int16(40220) * scalefactor(40221) / 1000, 2)},\n\n    ]\n}\n\nreturn col;\n\nfunction word(address) {\n    // Find the correct offset in bytes\n    // 40070 is the starting address we fetch from SolarEdge inverter\n    return (address-40191) * 2;\n}\n\nfunction scalefactor(address) {\n    return Math.pow(10, buf.readInt16BE(word(address)));\n}\n\nfunction int16(address) {\n    return buf.readInt16BE(word(address))\n}\n\nfunction uint16(address) {\n    return buf.readUInt16BE(word(address));\n}\n\nfunction int32(address) {\n    return buf.readInt32BE(word(address))\n}\n\nfunction uint32(address) {\n    return buf.readUInt32BE(word(address))\n}\n\nfunction round(value, decimals) {\n return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 220,
        "wires": [
            [
                "12aeaa3bea1f97e8"
            ]
        ]
    },
    {
        "id": "f181a24885a1a36e",
        "type": "split",
        "z": "16d854753ce10409",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "e24f2cd6249335ab"
            ]
        ]
    },
    {
        "id": "e24f2cd6249335ab",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "Transform",
        "func": "var inMsg = {\n    measurement: msg.payload.k,\n    payload:\n        [{\n            // fields\n            value: msg.payload.v,\n        },\n        {\n            // tags\n            vendor: \"solaredge\",\n            group: \"pv\",\n            location: \"roof\",\n            type: \"inverter\",\n            instance: 1\n        }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 160,
        "wires": [
            [
                "38413cfbad00b12d",
                "6094442647f33163"
            ]
        ]
    },
    {
        "id": "12aeaa3bea1f97e8",
        "type": "split",
        "z": "16d854753ce10409",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1010,
        "y": 220,
        "wires": [
            [
                "e3a479f13f237931"
            ]
        ]
    },
    {
        "id": "6094442647f33163",
        "type": "debug",
        "z": "16d854753ce10409",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 80,
        "wires": []
    },
    {
        "id": "f5bd18124162dace",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "mod -> JSON",
        "func": "// Create new Buffer based on array bytes\n// source: https://www.photovoltaikforum.com/thread/120980-akkustand-per-modbus-tcp-auslesen-solaredge-lg-resu-10h/?pageNo=1\nconst buf = Buffer.from(msg.payload.buffer);\n\nvar col = {\n    topic: \"seCal\",\n    payload: [\n        { k: 'dc_Power', v: round(float(62836)*(-1) / 1000, 2) }\n    ]\n}\ncol.payload[1] = { k: 'ac_Power', v: round(col.payload[0].v * (0.91), 2) }\n\nreturn col;\n\nfunction word(address) {\n    // Find the correct offset in bytes\n    // 40070 is the starting address we fetch from SolarEdge inverter\n    return (address - 62836) * 2;\n}\n\nfunction scalefactor(address) {\n    return Math.pow(10, buf.readInt16BE(word(address)));\n}\n\nfunction int16(address) {\n    return buf.readInt16BE(word(address))\n}\n\nfunction uint16(address) {\n    return buf.readUInt16BE(word(address));\n}\n\nfunction int32(address) {\n    return buf.readInt32BE(word(address))\n}\n\nfunction uint32(address) {\n    return buf.readUInt32BE(word(address))\n}\n\nfunction float(address) {\n    var tbuf = buf.subarray(word(address), 4);\n    var tbuf2 = tbuf.swap16().swap32();\n\n   return tbuf2.readFloatBE(0);\n}\n\nfunction round(value, decimals) {\n return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 300,
        "wires": [
            [
                "6b36142e053cb40f",
                "a9ea0b2b829e8135"
            ]
        ]
    },
    {
        "id": "6b36142e053cb40f",
        "type": "split",
        "z": "16d854753ce10409",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "0e61a3c4d942e5ce"
            ]
        ]
    },
    {
        "id": "0e61a3c4d942e5ce",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "Transform",
        "func": "var inMsg = {\n    measurement: msg.payload.k,\n    payload:\n        [{\n            // fields\n            value: msg.payload.v,\n        },\n        {\n            // tags\n            vendor: \"BYD\",\n            group: \"pv\",\n            location: \"basement\",\n            type: \"battery\",\n            instance: 1\n        }]\n}\n\nif(msg.payload.k == \"chargeState\") {\n    var cmMode = \"Off\";\n    if (msg.payload.v === 3) { cmMode = \"Charge\" }\n    if (msg.payload.v === 4) { cmMode = \"Discharge\" }\n    if (msg.payload.v === 6) { cmMode = \"Cons-Charging\" }\n    inMsg.payload[1][\"valueN\"] = cmMode;\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 300,
        "wires": [
            [
                "38413cfbad00b12d"
            ]
        ]
    },
    {
        "id": "a9ea0b2b829e8135",
        "type": "debug",
        "z": "16d854753ce10409",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 420,
        "wires": []
    },
    {
        "id": "defe7e798dc09814",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "mod -> JSON",
        "func": "// Create new Buffer based on array bytes\n// source https://www.photovoltaikforum.com/thread/120980-akkustand-per-modbus-tcp-auslesen-solaredge-lg-resu-10h/?pageNo=1\nconst buf = Buffer.from(msg.payload.buffer);\n\nvar col = {\n    topic: \"seCal\",\n    payload: [\n        { k: 'soc', v: float(62852) },\n        { k: 'chargeState', v: uint16(62854) }\n    ]\n}\n\nreturn col;\n\nfunction word(address) {\n    // Find the correct offset in bytes\n    // 40070 is the starting address we fetch from SolarEdge inverter\n    return (address - 62852) * 2;\n}\n\nfunction scalefactor(address) {\n    return Math.pow(10, buf.readInt16BE(word(address)));\n}\n\nfunction int16(address) {\n    return buf.readInt16BE(word(address))\n}\n\nfunction uint16(address) {\n    return buf.readUInt16BE(word(address));\n}\n\nfunction int32(address) {\n    return buf.readInt32BE(word(address))\n}\n\nfunction uint32(address) {\n    return buf.readUInt32BE(word(address))\n}\n\nfunction float(address) {\n    var tbuf = buf.subarray(word(address), 4);\n    var tbuf2 = tbuf.swap16().swap32();\n\n   return tbuf2.readFloatBE(0);\n}\n\nfunction round(value, decimals) {\n return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 360,
        "wires": [
            [
                "840dbd4718747fd4"
            ]
        ]
    },
    {
        "id": "840dbd4718747fd4",
        "type": "split",
        "z": "16d854753ce10409",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1010,
        "y": 360,
        "wires": [
            [
                "0e61a3c4d942e5ce"
            ]
        ]
    },
    {
        "id": "aa1ead1055651f2c",
        "type": "comment",
        "z": "16d854753ce10409",
        "name": "Calculate roof : I_DC_Power and I_AC_Power",
        "info": "",
        "x": 210,
        "y": 680,
        "wires": []
    },
    {
        "id": "3af79f53487d97e8",
        "type": "influxdb in",
        "z": "16d854753ce10409",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "query": "s1 = from(bucket: \"powerMan\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ac_PowerReal\")\n  |> filter(fn: (r) => r[\"instance\"] == \"1\")\n  |> filter(fn: (r) => r[\"type\"] == \"inverter\")\n  |> last()\n\n  s2 = from(bucket: \"powerMan\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ac_Power\")\n  |> filter(fn: (r) => r[\"instance\"] == \"1\")\n  |> filter(fn: (r) => r[\"type\"] == \"battery\")\n  |> last()\n\n  union(tables: [s1,s2])",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "stHome",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "7afaf5cfa7e4c6b1"
            ]
        ]
    },
    {
        "id": "2f7cd462606a9668",
        "type": "inject",
        "z": "16d854753ce10409",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "3af79f53487d97e8"
            ]
        ]
    },
    {
        "id": "07bc32a82bd10b6f",
        "type": "debug",
        "z": "16d854753ce10409",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 640,
        "wires": []
    },
    {
        "id": "7afaf5cfa7e4c6b1",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "Calc solar power i_DC_Power",
        "func": "var bat_AC_Power = msg.payload.find(i => i._measurement == \"ac_Power\");\nvar i_AC_PowerReal = msg.payload.find(i => i._measurement == \"ac_PowerReal\");\n\nvar i_AC_Power = round(i_AC_PowerReal._value - bat_AC_Power._value, 2);\nvar i_DC_Power = round(i_AC_Power*1.08, 2);\n\nvar col = {\n    topic: \"seCal\",\n    payload: [\n        { k: 'ac_Power', v: i_AC_Power },\n        { k: 'dc_Power', v: i_DC_Power }\n    ]\n}\n\nreturn col;\n\nfunction round(value, decimals) {\n    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 720,
        "wires": [
            [
                "ece68521d44e59f0"
            ]
        ]
    },
    {
        "id": "4505aeca478f263d",
        "type": "influxdb out",
        "z": "16d854753ce10409",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "stHome",
        "bucket": "powerMan",
        "x": 1390,
        "y": 720,
        "wires": []
    },
    {
        "id": "9b137f730ca8c370",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "Transform",
        "func": "var inMsg = {\n    measurement: msg.payload.k,\n    payload:\n        [{\n            // fields\n            value: msg.payload.v,\n        },\n        {\n            // tags\n            vendor: \"solaredge\",\n            group: \"pv\",\n            location: \"roof\",\n            type: \"inverter\",\n            instance: 1\n        }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 720,
        "wires": [
            [
                "4505aeca478f263d",
                "07bc32a82bd10b6f"
            ]
        ]
    },
    {
        "id": "ece68521d44e59f0",
        "type": "split",
        "z": "16d854753ce10409",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 910,
        "y": 720,
        "wires": [
            [
                "9b137f730ca8c370"
            ]
        ]
    },
    {
        "id": "e3a479f13f237931",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "Transform",
        "func": "var inMsg = {\n    measurement: msg.payload.k,\n    payload:\n        [{\n            // fields\n            value: msg.payload.v,\n        },\n        {\n            // tags\n            vendor: \"solaredge\",\n            group: \"evu\",\n            location: \"basement\",\n            type: \"evu-meter\",\n            instance: 1\n        }]\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 220,
        "wires": [
            [
                "38413cfbad00b12d"
            ]
        ]
    },
    {
        "id": "d4baa9bd90cdbbba",
        "type": "catch",
        "z": "16d854753ce10409",
        "name": "",
        "scope": [
            "49429e0d.b198d",
            "ce1bef37409bf886",
            "621e46aa9130767c",
            "7092266835921eab"
        ],
        "uncaught": false,
        "x": 90,
        "y": 1100,
        "wires": [
            [
                "e5adb74a0a4ba432"
            ]
        ]
    },
    {
        "id": "e5adb74a0a4ba432",
        "type": "debug",
        "z": "16d854753ce10409",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 1100,
        "wires": []
    },
    {
        "id": "52201ce2af035752",
        "type": "comment",
        "z": "16d854753ce10409",
        "name": "Catch WR1 & WR2",
        "info": "",
        "x": 130,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7cc25a30955b0867",
        "type": "inject",
        "z": "16d854753ce10409",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "17",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "0d9bc0570abe2ce9"
            ]
        ]
    },
    {
        "id": "0d9bc0570abe2ce9",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "function 4",
        "func": "msg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': 40083, 'quantity': 20 };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 160,
        "wires": [
            [
                "0fd6783b8f14b9b7"
            ]
        ]
    },
    {
        "id": "0fd6783b8f14b9b7",
        "type": "modbus-flex-getter",
        "z": "16d854753ce10409",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "78b1c87b.391bc8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 490,
        "y": 160,
        "wires": [
            [],
            [
                "6602d1b7.b24d78"
            ]
        ]
    },
    {
        "id": "fba9e079cc7edd3a",
        "type": "inject",
        "z": "16d854753ce10409",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "19",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "72395258fc6d8d2e"
            ]
        ]
    },
    {
        "id": "72395258fc6d8d2e",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "function 5",
        "func": "msg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': 40190, 'quantity': 40 };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 220,
        "wires": [
            [
                "0812cf39a11ea6e7"
            ]
        ]
    },
    {
        "id": "0812cf39a11ea6e7",
        "type": "modbus-flex-getter",
        "z": "16d854753ce10409",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "78b1c87b.391bc8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 490,
        "y": 220,
        "wires": [
            [],
            [
                "a987abfaf067f0d7"
            ]
        ]
    },
    {
        "id": "58f0dc74ac89f8fd",
        "type": "inject",
        "z": "16d854753ce10409",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "21",
        "crontab": "",
        "once": true,
        "onceDelay": "0.4",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "b52624251e2b1aee"
            ]
        ]
    },
    {
        "id": "b52624251e2b1aee",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "function 6",
        "func": "msg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': 62836, 'quantity': 2 };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 300,
        "wires": [
            [
                "a80974420ecac515"
            ]
        ]
    },
    {
        "id": "a80974420ecac515",
        "type": "modbus-flex-getter",
        "z": "16d854753ce10409",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "78b1c87b.391bc8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 490,
        "y": 300,
        "wires": [
            [],
            [
                "f5bd18124162dace"
            ]
        ]
    },
    {
        "id": "415f8591239dafc6",
        "type": "inject",
        "z": "16d854753ce10409",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "b1af57428bb2b57a"
            ]
        ]
    },
    {
        "id": "b1af57428bb2b57a",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "function 7",
        "func": "msg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': 62852, 'quantity': 4 };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 360,
        "wires": [
            [
                "91531eb9c95fd38c"
            ]
        ]
    },
    {
        "id": "91531eb9c95fd38c",
        "type": "modbus-flex-getter",
        "z": "16d854753ce10409",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "78b1c87b.391bc8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 490,
        "y": 360,
        "wires": [
            [],
            [
                "defe7e798dc09814"
            ]
        ]
    },
    {
        "id": "50b1e45fca7f7952",
        "type": "inject",
        "z": "16d854753ce10409",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": true,
        "onceDelay": "0.2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "80c3f25763f2418a"
            ]
        ]
    },
    {
        "id": "80c3f25763f2418a",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "function 8",
        "func": "msg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': 40083, 'quantity': 20 };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 560,
        "wires": [
            [
                "43a8a049e9bdab1b"
            ]
        ]
    },
    {
        "id": "43a8a049e9bdab1b",
        "type": "modbus-flex-getter",
        "z": "16d854753ce10409",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "7e9912ee.546204",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 490,
        "y": 560,
        "wires": [
            [],
            [
                "33449a937d186c07"
            ]
        ]
    },
    {
        "id": "5379d42dbafb2b7c",
        "type": "comment",
        "z": "16d854753ce10409",
        "name": "Calculate house : ac_Power",
        "info": "",
        "x": 160,
        "y": 840,
        "wires": []
    },
    {
        "id": "b1e92b9eadaf55d4",
        "type": "influxdb in",
        "z": "16d854753ce10409",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "query": "from(bucket: \"powerMan\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ac_Power\")\n  |> last()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "stHome",
        "x": 390,
        "y": 880,
        "wires": [
            [
                "38501a7435d18587"
            ]
        ]
    },
    {
        "id": "3f52aa0c4e15e9a2",
        "type": "inject",
        "z": "16d854753ce10409",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 880,
        "wires": [
            [
                "b1e92b9eadaf55d4"
            ]
        ]
    },
    {
        "id": "9a28422d6eee12fa",
        "type": "debug",
        "z": "16d854753ce10409",
        "name": "debug 39",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 800,
        "wires": []
    },
    {
        "id": "38501a7435d18587",
        "type": "function",
        "z": "16d854753ce10409",
        "name": "Calc house power ac_Power",
        "func": "var ac_power = 0;\nmsg.payload.forEach(e => {\n    if(e.type != \"house\") {\n        ac_power += e._value;\n    }\n})\n\nac_power = round(ac_power, 2);\n\nvar inMsg = {\n    measurement: \"ac_Power\",\n    payload:\n        [{\n            // fields\n            value: ac_power,\n        },\n        {\n            // tags\n            vendor: \"house\",\n            group: \"house\",\n            location: \"house\",\n            type: \"house\",\n            instance: 1\n        }]\n}\n\nreturn inMsg;\n\nfunction round(value, decimals) {\n    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 880,
        "wires": [
            [
                "9a28422d6eee12fa",
                "f76222c5023b578e"
            ]
        ]
    },
    {
        "id": "f76222c5023b578e",
        "type": "influxdb out",
        "z": "16d854753ce10409",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "stHome",
        "bucket": "powerMan",
        "x": 1390,
        "y": 880,
        "wires": []
    },
    {
        "id": "f94b3b6adbcb9c68",
        "type": "philipshue-events",
        "z": "e1a58a93ec1b7088",
        "bridge": "a713096719561df7",
        "x": 140,
        "y": 580,
        "wires": [
            [
                "dd1d6e38f0c977ab",
                "14fe61de869feb70"
            ]
        ]
    },
    {
        "id": "dd1d6e38f0c977ab",
        "type": "debug",
        "z": "e1a58a93ec1b7088",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 520,
        "wires": []
    },
    {
        "id": "baf0b05cb70abff5",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "HEADER V2",
        "func": "// var user is your discovered username, var ip the IP adress of your bridge\n// !! use different users because of max calls (return code 429)\nvar user = \"ObpqrDSd41XujqNimNK3FLsOjDg9WeZ-sdDMI6Gy\";\nvar ip = \"192.168.20.9\"\n\nif(msg.endpoint === undefined)\n msg.url = \"https://\" + ip + \"/clip/v2/resource\";\nelse if(msg.topic === undefined)\n msg.url = \"https://\" + ip + \"/clip/v2/resource/\" + msg.endpoint;\nelse\n msg.url = \"https://\" + ip + \"/clip/v2/resource/\" + msg.endpoint + \"/\" + msg.topic;\n\nmsg.headers = {};\n\nmsg.headers['hue-application-key'] = user;\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nif(msg.payload != undefined)\n msg.headers['ContentLength'] = JSON.stringify(msg.payload).length;\n\nif(msg.verb === undefined)\n msg.method = \"get\";\nelse\n msg.method = msg.verb;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 340,
        "wires": [
            [
                "95069a2908767f0d"
            ]
        ]
    },
    {
        "id": "95069a2908767f0d",
        "type": "http request",
        "z": "e1a58a93ec1b7088",
        "name": "HUE API V2",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "4bc31af9bd03bbdc",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 670,
        "y": 340,
        "wires": [
            [
                "0bef7de2abace0a3",
                "9032cb423d17d8f7"
            ]
        ]
    },
    {
        "id": "0bef7de2abace0a3",
        "type": "debug",
        "z": "e1a58a93ec1b7088",
        "name": "Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 280,
        "wires": []
    },
    {
        "id": "175ed636c81d88f2",
        "type": "inject",
        "z": "e1a58a93ec1b7088",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "acdfe3d2ed63125c"
            ]
        ]
    },
    {
        "id": "acdfe3d2ed63125c",
        "type": "change",
        "z": "e1a58a93ec1b7088",
        "name": "light",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "baf0b05cb70abff5"
            ]
        ]
    },
    {
        "id": "354fbe861dba90a5",
        "type": "change",
        "z": "e1a58a93ec1b7088",
        "name": "group",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "grouped_light",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 380,
        "wires": [
            [
                "baf0b05cb70abff5"
            ]
        ]
    },
    {
        "id": "423acdc1cf453dfd",
        "type": "inject",
        "z": "e1a58a93ec1b7088",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "354fbe861dba90a5"
            ]
        ]
    },
    {
        "id": "9032cb423d17d8f7",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "Transfer",
        "func": "var map = flow.get('hue_map_devices');\n\nvar devices = { payload : []}\nvar type = \"light\";\n\nif(msg.statusCode == 200) {\n\n    msg.payload.data.forEach(e => {\n\n        try {\n            if (e.type == \"grouped_light\") { type = \"group\" }\n\n            var color = \"NA\";\n            try {\n                var color = \"x:\" + e.color.xy.x + \"/y:\" + e.color.xy.y;\n            } catch(error) {}\n\n            var device = {\n                measurement: \"light\",\n                payload:\n                    [{\n                        // fields\n                        value: e.on.on,\n                        level: e.dimming.brightness,\n                        color: color,\n                    },\n                    {\n                        // tags\n                        id: e.id,\n                        name: map[e.id].name,\n                        id_v1: e.id_v1,\n                        type : type\n                    }]\n            }\n\n            devices.payload.push(device);\n        } catch(error) {}\n    })\n\n    return [devices, null];\n}\nelse\n{\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "9f39b0f9716a3524"
            ],
            [
                "10bc587bebb4e69f"
            ]
        ]
    },
    {
        "id": "f5d4887914ea3c56",
        "type": "debug",
        "z": "e1a58a93ec1b7088",
        "name": "Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 280,
        "wires": []
    },
    {
        "id": "9f39b0f9716a3524",
        "type": "split",
        "z": "e1a58a93ec1b7088",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1070,
        "y": 340,
        "wires": [
            [
                "993cc53a53cdb7e8"
            ]
        ]
    },
    {
        "id": "993cc53a53cdb7e8",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "function 14",
        "func": "var inMsg = msg.payload;\n\nvar devices = flow.get('hue_devices') || {};\n\nvar curId = inMsg.payload[1].id;\ndevices[curId] = inMsg;\nflow.set('hue_devices', devices);\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 340,
        "wires": [
            [
                "f5d4887914ea3c56",
                "c5f19a717bcfacfc"
            ]
        ]
    },
    {
        "id": "c5f19a717bcfacfc",
        "type": "influxdb out",
        "z": "e1a58a93ec1b7088",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "stHome",
        "bucket": "hue",
        "x": 1510,
        "y": 340,
        "wires": []
    },
    {
        "id": "9a1fe165bfc23c78",
        "type": "comment",
        "z": "e1a58a93ec1b7088",
        "name": "Read lights / groups on startup",
        "info": "",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "14fe61de869feb70",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "update flow:hue_devices",
        "func": "var devices = flow.get('hue_devices') || null\nvar errors = { errors : [] }\nvar changes = [];\n\n// If not initialized - do nothing here\nif (typeof devices == 'undefined'){\n    errors.errors.push(\"Flow hue_devices not defined.\");\n    return [null, errors];\n}\n\nif (typeof msg.payload.status != 'undefined') {\n    if(msg.payload.status != 200){\n        errors.errors.push(msg.payload.message);\n        return [null, errors];\n    }\n}\n\nmsg.payload.data.forEach(e => {\n    try {\n        var d = devices[e.id];\n\n        if (typeof e.on != 'undefined') {\n            d.payload[0].value = e.on.on;\n        }\n\n        if (typeof e.dimming != 'undefined') {\n            if (d.payload[0].value == true) {\n                d.payload[0].level = e.dimming.brightness;\n            }\n        }\n\n        if (typeof e.color != 'undefined') {\n            d.payload[0].color = \"x:\" + e.color.xy.x + \"/y:\" + e.color.xy.y;\n        }\n\n        if (!changes.some(elem => elem.payload[1].id == e.id)) {\n            changes.push(d);\n        }\n\n    } catch (error) {\n        errors.errors.push(\"Device with \" + e.id + \" not found in hue_devices.\");\n    }\n})\n\nreturn { payload : changes };",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 580,
        "wires": [
            [
                "b96f699563e377df"
            ],
            [
                "133f29facb71d02f"
            ]
        ]
    },
    {
        "id": "133f29facb71d02f",
        "type": "debug",
        "z": "e1a58a93ec1b7088",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 660,
        "wires": []
    },
    {
        "id": "b96f699563e377df",
        "type": "split",
        "z": "e1a58a93ec1b7088",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 580,
        "wires": [
            [
                "60f96648ef838967"
            ]
        ]
    },
    {
        "id": "60f96648ef838967",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "function 15",
        "func": "var inMsg = msg.payload;\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 580,
        "wires": [
            [
                "9090120ae3dd9027",
                "3d3f90d153f5d2ba",
                "145cea6af7173ef8"
            ]
        ]
    },
    {
        "id": "9090120ae3dd9027",
        "type": "debug",
        "z": "e1a58a93ec1b7088",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 520,
        "wires": []
    },
    {
        "id": "b68e58d8a9833cd8",
        "type": "comment",
        "z": "e1a58a93ec1b7088",
        "name": "Trigger Light",
        "info": "",
        "x": 1650,
        "y": 680,
        "wires": []
    },
    {
        "id": "5cc1bd42831b343c",
        "type": "delay",
        "z": "e1a58a93ec1b7088",
        "name": "",
        "pauseType": "queue",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1700,
        "y": 720,
        "wires": [
            [
                "03ba569749b8c39d",
                "8492209cdf772294"
            ]
        ]
    },
    {
        "id": "03ba569749b8c39d",
        "type": "link out",
        "z": "e1a58a93ec1b7088",
        "name": "hue_trg_lights_group",
        "mode": "link",
        "links": [
            "4254b51be531da74",
            "16e5f177fcc2e513"
        ],
        "x": 1945,
        "y": 720,
        "wires": []
    },
    {
        "id": "8492209cdf772294",
        "type": "debug",
        "z": "e1a58a93ec1b7088",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2000,
        "y": 800,
        "wires": []
    },
    {
        "id": "3d3f90d153f5d2ba",
        "type": "influxdb out",
        "z": "e1a58a93ec1b7088",
        "influxdb": "1e1a0e45bfb2abe0",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "stHome",
        "bucket": "hue",
        "x": 1510,
        "y": 580,
        "wires": []
    },
    {
        "id": "269198955e780aab",
        "type": "comment",
        "z": "e1a58a93ec1b7088",
        "name": "Read events",
        "info": "",
        "x": 130,
        "y": 480,
        "wires": []
    },
    {
        "id": "01e597d539000acd",
        "type": "link in",
        "z": "e1a58a93ec1b7088",
        "name": "link in 12",
        "links": [
            "11e2f2103fde0562"
        ],
        "x": 75,
        "y": 1040,
        "wires": [
            [
                "4e17ff614805dcdb"
            ]
        ]
    },
    {
        "id": "4e17ff614805dcdb",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "get map id",
        "func": "var working = flow.get('hue_working') || false;\nworking = true;\nflow.set('hue_working', working);\n\nvar map = flow.get('hue_map_devices');\nvar id = Object.keys(map).find(key => map[key].name === msg.target);\n\nreturn {target : msg.target, id : id, type : map[id].type,\npayload : {\n    on : msg.command.status,\n    brightness : msg.command.level,\n}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1040,
        "wires": [
            [
                "836637aa86df526f",
                "097e7b0184bf223b",
                "759828231b269513"
            ]
        ]
    },
    {
        "id": "66b6f030486a5039",
        "type": "comment",
        "z": "e1a58a93ec1b7088",
        "name": "Process UI Commands",
        "info": "",
        "x": 150,
        "y": 960,
        "wires": []
    },
    {
        "id": "836637aa86df526f",
        "type": "debug",
        "z": "e1a58a93ec1b7088",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 980,
        "wires": []
    },
    {
        "id": "097e7b0184bf223b",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "set group body",
        "func": "var inMsg = \n{\n    endpoint: \"grouped_light\",\n    topic: msg.id,\n    verb : \"put\",\n    payload : {\n         on: { on: msg.payload.on},\n         dimming: { brightness: msg.payload.brightness },\n         dynamics: { duration: 0 },\n         //color: { xy: { x: 0.6101, y: 0.3662 } }\n    }\n}\n\nreturn inMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1040,
        "wires": [
            [
                "14c547e82dedb8d1"
            ]
        ]
    },
    {
        "id": "14c547e82dedb8d1",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "HEADER V2",
        "func": "// var user is your discovered username, var ip the IP adress of your bridge\nvar user = \"8ICw-e5kShrEtmVLtS77ez3pV-u3noBaJfguzVU5\";\nvar ip = \"192.168.20.9\"\n\nif(msg.endpoint === undefined)\n msg.url = \"https://\" + ip + \"/clip/v2/resource\";\nelse if(msg.topic === undefined)\n msg.url = \"https://\" + ip + \"/clip/v2/resource/\" + msg.endpoint;\nelse\n msg.url = \"https://\" + ip + \"/clip/v2/resource/\" + msg.endpoint + \"/\" + msg.topic;\n\nmsg.headers = {};\n\nmsg.headers['hue-application-key'] = user;\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nif(msg.payload != undefined)\n msg.headers['ContentLength'] = JSON.stringify(msg.payload).length;\n\nif(msg.verb === undefined)\n msg.method = \"get\";\nelse\n msg.method = msg.verb;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1040,
        "wires": [
            [
                "680ae355793032d2"
            ]
        ]
    },
    {
        "id": "680ae355793032d2",
        "type": "http request",
        "z": "e1a58a93ec1b7088",
        "name": "HUE API V2",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "4bc31af9bd03bbdc",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 990,
        "y": 1040,
        "wires": [
            [
                "67942298b5ad45c3"
            ]
        ]
    },
    {
        "id": "67942298b5ad45c3",
        "type": "debug",
        "z": "e1a58a93ec1b7088",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a60ffa6b9a814c40",
        "type": "comment",
        "z": "e1a58a93ec1b7088",
        "name": "Store hue mapping",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "9b9e60e847a7d24d",
        "type": "inject",
        "z": "e1a58a93ec1b7088",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0,1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "b701436118934716"
            ]
        ]
    },
    {
        "id": "b701436118934716",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "function 16",
        "func": "var map = {\n    \"01b51cb0-55a4-4075-92ef-e90b1008d7ee\": { name: \"00-Wohn-L02\", type: \"light\" },\n    \"f0e3084d-9cf0-41cb-b20e-bf9383942cc1\": { name: \"01-Kind2-L01\", type: \"light\" },\n    \"5d91e5e6-7334-4bd7-add4-9e6aa689e59d\": { name: \"00-Outdoor-L04\", type: \"light\" },\n    \"b4a8c226-dd18-4c1e-b428-178e11661721\": { name: \"01-Bad-Decke\", type: \"light\" },\n    \"fdad1bf5-5fc5-4277-808f-872d02c15cde\": { name: \"01-Bad-L01\", type: \"light\" },\n    \"1ad2c00c-4b30-42a9-a8d9-79c6bd0da3fc\": { name: \"00-Outdoor-L01\", type: \"light\" },\n    \"7a35fc51-5baa-4e1c-a600-da97f6f7fca4\": { name: \"01-Kind2-L02\", type: \"light\" },\n    \"5ff0adba-b588-4061-8abc-f413a394fb7f\": { name: \"00-Wohn-L05\", type: \"light\" },\n    \"b312ad18-80e3-4e3e-8a49-19dbc4938e96\": { name: \"00-Outdoor-L03\", type: \"light\" },\n    \"aa687ae8-d817-4f73-ad40-d8bca0007ede\": { name: \"00-Wohn-L04\", type: \"light\" },\n    \"3fafbfc9-91d6-4d48-abc2-013b2c6f17d8\": { name: \"00-Wohn-L03\", type: \"light\" },\n    \"0f144458-142d-49f0-8023-419545c57e04\": { name: \"01-Kind2-L03\", type: \"light\" },\n    \"52a27fb5-8224-480b-b4e3-7610c6b646ad\": { name: \"01-Kind2-L04\", type: \"light\" },\n\n    \"206880e7-c67d-4124-a525-70a7e2abbdca\": { name: \"00-Outdoor\", type: \"grouped_light\" },\n    \"1867a026-bc70-41ae-b633-6bdbe28bdbc8\": { name: \"01-Kind2\", type: \"grouped_light\" },\n    \"49918d93-be78-45c1-9283-ab0c8ffbbcdb\": { name: \"00-All-Groups\", type: \"grouped_light\" },\n    \"d14ed30d-28aa-4730-b18e-efd69cf3514c\": { name: \"01-Bad\", type: \"grouped_light\" },\n    \"673ed1c2-5820-41ab-96ae-3c843f6483a6\": { name: \"00-Wohn\", type: \"grouped_light\" }\n}\n\nflow.set('hue_map_devices', map);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "08e49afcba9faad7",
        "type": "comment",
        "z": "e1a58a93ec1b7088",
        "name": "HUE API Key - READ ME FIRST",
        "info": "Because of query restriction three different api key used for communication",
        "x": 190,
        "y": 220,
        "wires": []
    },
    {
        "id": "10bc587bebb4e69f",
        "type": "debug",
        "z": "e1a58a93ec1b7088",
        "name": "HUE Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 420,
        "wires": []
    },
    {
        "id": "759828231b269513",
        "type": "delay",
        "z": "e1a58a93ec1b7088",
        "name": "is WORKING",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 510,
        "y": 1140,
        "wires": [
            [
                "8e3b009067f32be8"
            ]
        ]
    },
    {
        "id": "8e3b009067f32be8",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "reset WORKING",
        "func": "var working = flow.get('hue_working') || false;\nworking = false;\nflow.set('hue_working', working);\n\nvar trg = {\n    topic: \"hue/trigger/command\",\n    payload: \"command\",\n    type: \"trigger\"\n}\nreturn trg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1140,
        "wires": [
            [
                "ad555de1cfc40b73",
                "1034aac89afcdb75"
            ]
        ]
    },
    {
        "id": "ad555de1cfc40b73",
        "type": "link out",
        "z": "e1a58a93ec1b7088",
        "name": "hue_working_reset_trg",
        "mode": "link",
        "links": [
            "47730f85348ac1a3"
        ],
        "x": 945,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1034aac89afcdb75",
        "type": "debug",
        "z": "e1a58a93ec1b7088",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1220,
        "wires": []
    },
    {
        "id": "145cea6af7173ef8",
        "type": "function",
        "z": "e1a58a93ec1b7088",
        "name": "trg switch/dimmer",
        "func": "var working = flow.get('hue_working') || false;\n\nif (working == false) {\n    var trg = {\n        topic: \"hue/trigger/command\",\n        payload: \"command\",\n        type: \"trigger\"\n    }\n    return trg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 720,
        "wires": [
            [
                "5cc1bd42831b343c"
            ]
        ]
    },
    {
        "id": "47730f85348ac1a3",
        "type": "link in",
        "z": "e1a58a93ec1b7088",
        "name": "link in 13",
        "links": [
            "ad555de1cfc40b73"
        ],
        "x": 1435,
        "y": 800,
        "wires": [
            [
                "5cc1bd42831b343c"
            ]
        ]
    },
    {
        "id": "bc13569d4ade655e",
        "type": "link out",
        "z": "0e0fd1a97350597a",
        "name": "EventStream",
        "mode": "link",
        "links": [
            "502d2cc6c810a3a7",
            "7d8478cbef873f0c",
            "fa82325fe55e72bb"
        ],
        "x": 1050,
        "y": 360,
        "wires": [],
        "l": true
    },
    {
        "id": "97253bedabd51221",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "HUE monitor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 320,
        "wires": []
    },
    {
        "id": "71b4116aa31e8955",
        "type": "link in",
        "z": "0e0fd1a97350597a",
        "d": true,
        "name": "HUE API INPUT",
        "links": [
            "cc265bc2392bbe4b",
            "8d0b43fbf3fb1bb7"
        ],
        "x": 220,
        "y": 780,
        "wires": [
            [
                "ebd21ba0d066358b"
            ]
        ],
        "l": true
    },
    {
        "id": "016fe7b862b86be7",
        "type": "http request",
        "z": "0e0fd1a97350597a",
        "name": "HUE API V2",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "4bc31af9bd03bbdc",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 780,
        "wires": [
            [
                "00279367b1be3bb9"
            ]
        ]
    },
    {
        "id": "6633742b3d9ae451",
        "type": "link out",
        "z": "0e0fd1a97350597a",
        "d": true,
        "name": "API Response OUT",
        "mode": "link",
        "links": [
            "80202a0de7b91b2e"
        ],
        "x": 1290,
        "y": 800,
        "wires": [],
        "l": true
    },
    {
        "id": "069a46c8d2f6a8b7",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Take snapshot \\n - or - \\n Restore snapshot \\n (retry processing) \\n +set rate max 1/250ms",
        "func": "// Take a copy of payload & headers as they are now to be able to re-use it on retry\nif (msg.retryInfo === undefined) {\n    // msg was never processed befor, take a copy (snapshot) of key values to be re-applied in case of retry\n    msg.retryInfo = {}\n    msg.retryInfo.payload = msg.payload;\n    msg.retryInfo.headers = msg.headers;\n    msg.retryInfo.retryCount = 0;\n} else {\n    // msg was processed at least once before, apply snapshot'd values back\n    msg.payload = msg.retryInfo.payload;\n    msg.headers = msg.retryInfo.headers;\n    msg.statusCode = undefined;\n    msg.retryInfo.retryCount++\n}\n\n// Set maximum rate to 1/200ms\nmsg.rate = 200;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 800,
        "wires": [
            [
                "47a3b797b89126ce"
            ]
        ],
        "outputLabels": [
            "Blocked msg to send to repeater"
        ],
        "icon": "font-awesome/fa-copy"
    },
    {
        "id": "ca28a7c4d1b42f5a",
        "type": "delay",
        "z": "0e0fd1a97350597a",
        "name": "(0.25s - 0.5s)",
        "pauseType": "random",
        "timeout": "1100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "250",
        "randomLast": "500",
        "randomUnits": "milliseconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 820,
        "wires": [
            [
                "069a46c8d2f6a8b7"
            ]
        ]
    },
    {
        "id": "86a19657b55dd68b",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "HUE API error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 840,
        "wires": []
    },
    {
        "id": "c415dfc7209ff6d0",
        "type": "link in",
        "z": "0e0fd1a97350597a",
        "name": "Retry...",
        "links": [
            "0a33879b937b8da5"
        ],
        "x": 285,
        "y": 820,
        "wires": [
            [
                "ca28a7c4d1b42f5a"
            ]
        ]
    },
    {
        "id": "0a33879b937b8da5",
        "type": "link out",
        "z": "0e0fd1a97350597a",
        "name": "Try to retry...",
        "mode": "link",
        "links": [
            "c415dfc7209ff6d0"
        ],
        "x": 1195,
        "y": 760,
        "wires": []
    },
    {
        "id": "00279367b1be3bb9",
        "type": "switch",
        "z": "0e0fd1a97350597a",
        "name": "Catch Error \\n 429+503",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "429",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "503",
                "vt": "num"
            },
            {
                "t": "regex",
                "v": "2\\d\\d",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1030,
        "y": 820,
        "wires": [
            [
                "53182dc082f21dc6"
            ],
            [
                "53182dc082f21dc6"
            ],
            [
                "6633742b3d9ae451"
            ],
            [
                "6633742b3d9ae451",
                "86a19657b55dd68b"
            ]
        ],
        "outputLabels": [
            null,
            "503 : too many calls sent",
            "2xx : all OK",
            "others (Error)"
        ]
    },
    {
        "id": "47a3b797b89126ce",
        "type": "delay",
        "z": "0e0fd1a97350597a",
        "name": "Limit 1msg/s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": true,
        "outputs": 1,
        "x": 830,
        "y": 820,
        "wires": [
            [
                "016fe7b862b86be7"
            ]
        ]
    },
    {
        "id": "53182dc082f21dc6",
        "type": "switch",
        "z": "0e0fd1a97350597a",
        "name": "Max 10 retries",
        "property": "retryInfo.retryCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "10",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1040,
        "y": 760,
        "wires": [
            [
                "0a33879b937b8da5"
            ],
            [
                "6633742b3d9ae451",
                "86a19657b55dd68b"
            ]
        ],
        "outputLabels": [
            "Less than 10 errors, keep retrying...",
            "More than 10 errors, abord retries"
        ]
    },
    {
        "id": "f763f3abcf18387a",
        "type": "subflow:1b9462200f30effc",
        "z": "0e0fd1a97350597a",
        "name": "",
        "env": [
            {
                "name": "button_ID",
                "value": "replace with discovered button <<ID>>",
                "type": "str"
            }
        ],
        "x": 320,
        "y": 1920,
        "wires": [
            [
                "49932ebf7074d6a6"
            ],
            [
                "e5f651f408c7c03c"
            ],
            [
                "e6acdb1053599fd0"
            ],
            [
                "df4650786822d29b"
            ]
        ]
    },
    {
        "id": "24ca190c09e4b20b",
        "type": "subflow:06d15551bcfcd5b5",
        "z": "0e0fd1a97350597a",
        "name": "",
        "env": [
            {
                "name": "light_ID",
                "value": "replace with discovered Lamp ID / Group RID",
                "type": "str"
            }
        ],
        "x": 330,
        "y": 1440,
        "wires": [
            [
                "15824fdb73d9464b"
            ],
            [
                "aa1ac1fa95a14093"
            ],
            [
                "3c75f26864ac7271"
            ]
        ]
    },
    {
        "id": "6bcea81ced18c213",
        "type": "subflow:f2b9624783dc3e90",
        "z": "0e0fd1a97350597a",
        "name": "",
        "env": [
            {
                "name": "motion_ID",
                "value": "replace with discovered Motion Sensor <<ID>>",
                "type": "str"
            }
        ],
        "x": 320,
        "y": 1680,
        "wires": [
            [
                "1f34356a85ca78e9"
            ],
            [
                "1bcdae3f2d1174fc"
            ],
            [
                "ae0cf3f1ef91363d"
            ]
        ]
    },
    {
        "id": "49932ebf7074d6a6",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "initial",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1860,
        "wires": []
    },
    {
        "id": "e5f651f408c7c03c",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "short",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1900,
        "wires": []
    },
    {
        "id": "e6acdb1053599fd0",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "holded",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1940,
        "wires": []
    },
    {
        "id": "df4650786822d29b",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "long",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1980,
        "wires": []
    },
    {
        "id": "1f34356a85ca78e9",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "motion true",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1640,
        "wires": []
    },
    {
        "id": "1bcdae3f2d1174fc",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "motion true + false",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 1680,
        "wires": []
    },
    {
        "id": "ae0cf3f1ef91363d",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "motion false",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1720,
        "wires": []
    },
    {
        "id": "15824fdb73d9464b",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "On (true)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1400,
        "wires": []
    },
    {
        "id": "aa1ac1fa95a14093",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "On / Off (true/false)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 1440,
        "wires": []
    },
    {
        "id": "3c75f26864ac7271",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "Off (false)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1480,
        "wires": []
    },
    {
        "id": "fa82325fe55e72bb",
        "type": "link in",
        "z": "0e0fd1a97350597a",
        "name": "HUE IN",
        "links": [
            "bc13569d4ade655e"
        ],
        "x": 150,
        "y": 1680,
        "wires": [
            [
                "6bcea81ced18c213"
            ]
        ],
        "l": true
    },
    {
        "id": "7d8478cbef873f0c",
        "type": "link in",
        "z": "0e0fd1a97350597a",
        "name": "HUE IN",
        "links": [
            "bc13569d4ade655e"
        ],
        "x": 150,
        "y": 1920,
        "wires": [
            [
                "f763f3abcf18387a"
            ]
        ],
        "l": true
    },
    {
        "id": "502d2cc6c810a3a7",
        "type": "link in",
        "z": "0e0fd1a97350597a",
        "name": "HUE IN",
        "links": [
            "bc13569d4ade655e"
        ],
        "x": 150,
        "y": 1440,
        "wires": [
            [
                "24ca190c09e4b20b"
            ]
        ],
        "l": true
    },
    {
        "id": "c8d8fc683c679870",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Array Splitter",
        "func": "for (var i = 0; i < msg.payload.data.length; i++) {\n    // Create a deep copy of msg object\n    let splitmsg = JSON.parse(JSON.stringify(msg));\n\n    // Reset data of new message to its single data part\n    splitmsg.payload.data = [msg.payload.data[i]];\n    \n    // send using node\n    node.send(splitmsg);\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 360,
        "wires": [
            [
                "bc13569d4ade655e",
                "97253bedabd51221"
            ]
        ]
    },
    {
        "id": "d323c26e7e815be8",
        "type": "link out",
        "z": "0e0fd1a97350597a",
        "name": "API Response OUT",
        "mode": "link",
        "links": [
            "80202a0de7b91b2e"
        ],
        "x": 1070,
        "y": 520,
        "wires": [],
        "l": true
    },
    {
        "id": "80202a0de7b91b2e",
        "type": "link in",
        "z": "0e0fd1a97350597a",
        "name": "BRIDGE DATA RESPONSE IN",
        "links": [
            "d323c26e7e815be8",
            "3f6d2329.8027ec",
            "29cb5ec00b633749",
            "6633742b3d9ae451"
        ],
        "x": 2245,
        "y": 740,
        "wires": [
            [
                "ccb5810d7d65d63d",
                "87ee96e9cfc165df",
                "c2f53355dd029549",
                "3192fb3264e67710",
                "ab838c6ea04cc73f",
                "60e42d97ebbe9235",
                "bb82ec1cca30b5ff"
            ]
        ]
    },
    {
        "id": "ccb5810d7d65d63d",
        "type": "switch",
        "z": "0e0fd1a97350597a",
        "name": "Room",
        "property": "endpoint",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "room",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2550,
        "y": 560,
        "wires": [
            [
                "fc285a8bd6771d1b",
                "7207a6e426862283"
            ]
        ]
    },
    {
        "id": "102315f9e7545dbf",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Scenes Zone (seperately)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "split",
        "payload": "zone_scenes",
        "payloadType": "flow",
        "x": 1810,
        "y": 900,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "a5b3b952ba888aba",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "rooms",
        "rules": [
            {
                "t": "set",
                "p": "rooms",
                "pt": "flow",
                "to": "keys",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2890,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "87ee96e9cfc165df",
        "type": "switch",
        "z": "0e0fd1a97350597a",
        "name": "Scene",
        "property": "endpoint",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "scene",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2550,
        "y": 740,
        "wires": [
            [
                "ed07220d6193848e",
                "4617516d6f9fd3a6"
            ]
        ]
    },
    {
        "id": "c2f53355dd029549",
        "type": "switch",
        "z": "0e0fd1a97350597a",
        "name": "Light",
        "property": "endpoint",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "light",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2550,
        "y": 1140,
        "wires": [
            [
                "213626fb8ff1954e"
            ]
        ]
    },
    {
        "id": "3192fb3264e67710",
        "type": "switch",
        "z": "0e0fd1a97350597a",
        "name": "Zone",
        "property": "endpoint",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "zone",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2550,
        "y": 400,
        "wires": [
            [
                "9d36d8a780c253a5",
                "da76490a975ce4da"
            ]
        ]
    },
    {
        "id": "ed07220d6193848e",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Scene Name, ID, Zone Name",
        "func": "var response = [];\nvar zones = flow.get(\"zones\") || {};\nvar size = Object.keys(zones).length;\nif(size <= 0) {\n    node.error(\"Please Update Zones First\");\n}\nmsg.payload.data.forEach(function(item){\n    var pair = {\n        \"name\": item.metadata.name,\n        \"id\": item.id,\n        // \"rid\": item.group.rid,\n        // \"rtype\": item.group.rtype,\n        \"zone-name\": zones[item.group.rid]\n    };\n    response.push(pair);\n});\nreturn {\n    \"payload\": response,\n    \"topic\": \"Scene name/rids\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2810,
        "y": 700,
        "wires": [
            [
                "3788426cd354af17"
            ]
        ]
    },
    {
        "id": "37fbc6d748d64b59",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "zones",
        "rules": [
            {
                "t": "set",
                "p": "zones",
                "pt": "flow",
                "to": "keys",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2890,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "3788426cd354af17",
        "type": "subflow:aff9cdb5.1ba04",
        "z": "0e0fd1a97350597a",
        "name": "",
        "env": [],
        "x": 2840,
        "y": 740,
        "wires": [
            [
                "5998a72d5e8edfd9",
                "dfe2afedf6931e76"
            ],
            [
                "e357f0348ee8893b",
                "4836fcee8db6f559"
            ]
        ]
    },
    {
        "id": "5998a72d5e8edfd9",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "Room Scenes",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 700,
        "wires": []
    },
    {
        "id": "e357f0348ee8893b",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "Zone Scenes",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 780,
        "wires": []
    },
    {
        "id": "b4058872d129361e",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "Rooms",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3100,
        "y": 540,
        "wires": []
    },
    {
        "id": "82a59594306afa2b",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "Zones",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3090,
        "y": 380,
        "wires": []
    },
    {
        "id": "579b668f9dcdd935",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Request all Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1840,
        "y": 200,
        "wires": [
            [
                "bb1f2705f8c82a60",
                "083e5a046cd1aa80"
            ]
        ]
    },
    {
        "id": "dfe2afedf6931e76",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "room_scenes",
        "rules": [
            {
                "t": "set",
                "p": "room_scenes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2860,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "083e5a046cd1aa80",
        "type": "subflow:d1abcd4.10bc03",
        "z": "0e0fd1a97350597a",
        "name": "Request",
        "env": [],
        "x": 2040,
        "y": 200,
        "wires": [
            [
                "cc265bc2392bbe4b"
            ]
        ]
    },
    {
        "id": "4836fcee8db6f559",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "zone scene",
        "rules": [
            {
                "t": "set",
                "p": "zone_scenes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2870,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "8425b08008fdf0ce",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Scenes Zone (an array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "array",
        "payload": "zone_scenes",
        "payloadType": "flow",
        "x": 1820,
        "y": 860,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "c3b6f9f1240cc9f7",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Scenes Room (an array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "array",
        "payload": "room_scenes",
        "payloadType": "flow",
        "x": 1810,
        "y": 620,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "d18ad3f3f2519a2b",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Scenes Room (seperately)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "split",
        "payload": "room_scenes",
        "payloadType": "flow",
        "x": 1810,
        "y": 660,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "42ca1a04ee56584e",
        "type": "subflow:7a14643a.75260c",
        "z": "0e0fd1a97350597a",
        "name": "",
        "env": [],
        "x": 2220,
        "y": 740,
        "wires": [
            [
                "beafe38cb6162d26"
            ]
        ]
    },
    {
        "id": "bb1f2705f8c82a60",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "DELETE",
        "rules": [
            {
                "t": "delete",
                "p": "zones",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "rooms",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "lights",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "zone_scenes",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "room_scenes",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "rooms_array",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "zones_array",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "devices",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "motion",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "lights",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "button",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "173fb2fb6e56fa8f",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "d": true,
        "name": "Delete Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1850,
        "y": 240,
        "wires": [
            [
                "bb1f2705f8c82a60"
            ]
        ]
    },
    {
        "id": "6d47cca266294bea",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "lights",
        "rules": [
            {
                "t": "set",
                "p": "lights",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2890,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "ca4faf603a563f85",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "Lights",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3090,
        "y": 1140,
        "wires": []
    },
    {
        "id": "213626fb8ff1954e",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Light Name, ID, Abilities",
        "func": "var response = [];\nvar rooms = flow.get(\"rooms\") || {};\nvar size = Object.keys(rooms).length;\nif(size <= 0) {\n    node.error(\"Please Update Rooms First\");\n}\nmsg.payload.data.forEach(function(item){\n    var pair = {\n        \"name\": item.metadata.name,\n        \"type\": item.metadata.archetype,\n        \"id\": item.id,\n        \"color\": item.hasOwnProperty(\"color\") ? true : false,\n        \"temp\": item.hasOwnProperty(\"color_temperature\") ? true : false\n    };\n    response.push(pair);\n});\nreturn {\n    \"payload\": response,\n    \"topic\": \"Lights\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2830,
        "y": 1140,
        "wires": [
            [
                "6d47cca266294bea",
                "ca4faf603a563f85"
            ]
        ]
    },
    {
        "id": "14927202c421162c",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Buttons (an Array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "array",
        "payload": "button",
        "payloadType": "flow",
        "x": 1830,
        "y": 1100,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "388869b8eb4a99c2",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Buttons (seperately)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "split",
        "payload": "button",
        "payloadType": "flow",
        "x": 1830,
        "y": 1140,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "c3ba171edf7cda1e",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Rooms (seperately)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "split",
        "payload": "rooms_array",
        "payloadType": "flow",
        "x": 1830,
        "y": 540,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "fc285a8bd6771d1b",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Room Name and ID",
        "func": "var response = [];\nvar roomkeys = {};\nmsg.payload.data.forEach(function(item){\n    if(item.services.length > 0) {\n        var pair = {\n            \"name\": item.metadata.name,\n            \"id\": item.id,\n            \"rid\": item.services[0].rid,\n            \"rtype\": item.services[0].rtype\n        };\n        roomkeys[item.id] = item.metadata.name;\n        response.push(pair);\n    }\n});\n\nreturn {\n    \"payload\": response,\n    \"topic\": \"rooms name/rid\",\n    \"keys\": roomkeys\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2840,
        "y": 540,
        "wires": [
            [
                "a5b3b952ba888aba",
                "b4058872d129361e"
            ]
        ]
    },
    {
        "id": "ab838c6ea04cc73f",
        "type": "switch",
        "z": "0e0fd1a97350597a",
        "name": "Device",
        "property": "endpoint",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2550,
        "y": 900,
        "wires": [
            [
                "549717e38950938e"
            ]
        ]
    },
    {
        "id": "549717e38950938e",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Devices Button and Motion",
        "func": "// NOTE: Devices have multipe rtypes in the services\n// This script grabs the first one, so a motion sensor may show\n// up as \"temperature\" as it also does temp. don't worry\n// this script is more to get the name of the devices to help\n// with the button/motion scripts.\nvar response = [];\nvar devices = {};\nmsg.payload.data.forEach(function(item){\n    try {\n        if(item.metadata.archetype == \"unknown_archetype\") {\n            var pair = {\n                \"name\": item.metadata.name,\n                \"id\": item.id,\n                \"rid\": item.services[0].rid,\n                \"rtype\": item.services[0].rtype\n            };\n            devices[item.id] = item.metadata.name;\n            response.push(pair);\n        }\n    } catch(err) {\n        node.warn(err);\n    }\n});\n\nreturn {\n    \"payload\": response,\n    \"topic\": \"devices name/rid\",\n    \"keys\": devices\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2820,
        "y": 900,
        "wires": [
            [
                "ea32f8ee62565eb0",
                "c70b0f09175d9d71"
            ]
        ]
    },
    {
        "id": "ea32f8ee62565eb0",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "devices",
        "rules": [
            {
                "t": "set",
                "p": "devices",
                "pt": "flow",
                "to": "keys",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "da76490a975ce4da",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Zone Name and ID",
        "func": "var response = [];\nvar roomkeys = {};\nmsg.payload.data.forEach(function(item){\n    if(item.hasOwnProperty(\"services\")) {\n        var pair = {\n            \"name\": item.metadata.name,\n            \"id\": item.id,\n            \"rid\": item.services[0].rid,\n            \"rtype\": item.services[0].rtype\n        };\n        roomkeys[item.id] = item.metadata.name;\n        response.push(pair);\n    }\n});\n\nreturn {\n    \"payload\": response,\n    \"topic\": \"zones name/rid\",\n    \"keys\": roomkeys\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2850,
        "y": 380,
        "wires": [
            [
                "37fbc6d748d64b59",
                "82a59594306afa2b"
            ]
        ]
    },
    {
        "id": "9d36d8a780c253a5",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Zone Name and ID (array)",
        "func": "var response = [];\nmsg.payload.data.forEach(function(item){\n    if(item.services.length > 0) {\n        var pair = {\n            \"name\": item.metadata.name,\n            \"id\": item.id,\n            \"rid\": item.services[0].rid,\n            \"rtype\": item.services[0].rtype\n        };\n         response.push(pair);\n    }\n});\n\nreturn {\n    \"payload\": response,\n    \"topic\": \"zones name/rid\",\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2830,
        "y": 420,
        "wires": [
            [
                "ec0c34d210422b7c"
            ]
        ]
    },
    {
        "id": "4617516d6f9fd3a6",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Scene Name, ID, Room Name",
        "func": "var response = [];\nvar rooms = flow.get(\"rooms\") || {};\nvar size = Object.keys(rooms).length;\nif(size <= 0) {\n    node.error(\"Please Update Rooms First\");\n}\nmsg.payload.data.forEach(function(item){\n    var pair = {\n        \"name\": item.metadata.name,\n        \"id\": item.id,\n        // \"rid\": item.group.rid,\n        // \"rtype\": item.group.rtype,\n        \"room-name\": rooms[item.group.rid]\n    };\n    response.push(pair);\n});\nreturn {\n    \"payload\": response,\n    \"topic\": \"Scene name/rids\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2810,
        "y": 780,
        "wires": [
            [
                "3788426cd354af17"
            ]
        ]
    },
    {
        "id": "7207a6e426862283",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Room Name and ID (array)",
        "func": "var response = [];\nmsg.payload.data.forEach(function(item){\n    if(item.services.length > 0) {\n        var pair = {\n            \"name\": item.metadata.name,\n            \"id\": item.id,\n            \"rid\": item.services[0].rid,\n            \"rtype\": item.services[0].rtype\n        };\n         response.push(pair);\n    }\n});\n\nreturn {\n    \"payload\": response,\n    \"topic\": \"rooms name/rid\",\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2820,
        "y": 580,
        "wires": [
            [
                "757b7f0cb38a4943"
            ]
        ]
    },
    {
        "id": "757b7f0cb38a4943",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "rooms_array",
        "rules": [
            {
                "t": "set",
                "p": "rooms_array",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2870,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "ec0c34d210422b7c",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "zones_array",
        "rules": [
            {
                "t": "set",
                "p": "zones_array",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2870,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "3db2ea4221a5634e",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Rooms (an array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "array",
        "payload": "rooms_array",
        "payloadType": "flow",
        "x": 1840,
        "y": 500,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "beafe38cb6162d26",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "API V2 DATA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 700,
        "wires": []
    },
    {
        "id": "6fc63466383f3eb3",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Zones (seperately)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "split",
        "payload": "zones_array",
        "payloadType": "flow",
        "x": 1830,
        "y": 780,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "a3eadcd481ea50bf",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Zones (an array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "array",
        "payload": "zones_array",
        "payloadType": "flow",
        "x": 1840,
        "y": 740,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "c70b0f09175d9d71",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "Devices",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3100,
        "y": 900,
        "wires": []
    },
    {
        "id": "60e42d97ebbe9235",
        "type": "switch",
        "z": "0e0fd1a97350597a",
        "name": "Motion",
        "property": "endpoint",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "motion",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2550,
        "y": 980,
        "wires": [
            [
                "86639e15164186b2"
            ]
        ]
    },
    {
        "id": "86639e15164186b2",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Motion Name, ID, Device Name",
        "func": "var response = [];\nvar devices = flow.get(\"devices\") || {};\nvar size = Object.keys(devices).length;\nif(size <= 0) {\n    node.error(\"Please Update Devices First\");\n}\nmsg.payload.data.forEach(function(item){\n    var pair = {\n        \"Device\": devices[item.owner.rid],\n        \"id\": item.id,\n        \"type\": item.type,\n    };\n    response.push(pair);\n});\nreturn {\n    \"payload\": response,\n    \"topic\": \"Motion name/rids\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2810,
        "y": 980,
        "wires": [
            [
                "12869f206e6dc282",
                "7fa4b416e5dea4ac"
            ]
        ]
    },
    {
        "id": "12869f206e6dc282",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "Motion",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3090,
        "y": 980,
        "wires": []
    },
    {
        "id": "7fa4b416e5dea4ac",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "motion",
        "rules": [
            {
                "t": "set",
                "p": "motion",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2890,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "0b752e50ab59ee2e",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Motion Senors (seperately)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "split",
        "payload": "motion",
        "payloadType": "flow",
        "x": 1810,
        "y": 1020,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "d1b3d76012f748e3",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Motion Sensors (an array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "array",
        "payload": "motion",
        "payloadType": "flow",
        "x": 1810,
        "y": 980,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "bb82ec1cca30b5ff",
        "type": "switch",
        "z": "0e0fd1a97350597a",
        "name": "Button",
        "property": "endpoint",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2550,
        "y": 1060,
        "wires": [
            [
                "ee4ce528e8e0d74a"
            ]
        ]
    },
    {
        "id": "5010505c8c734cc8",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Lights (seperately)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "split",
        "payload": "lights",
        "payloadType": "flow",
        "x": 1830,
        "y": 420,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "5c599d058cb00ae8",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Lights (an array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "array",
        "payload": "lights",
        "payloadType": "flow",
        "x": 1840,
        "y": 380,
        "wires": [
            [
                "42ca1a04ee56584e"
            ]
        ]
    },
    {
        "id": "ee4ce528e8e0d74a",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "Button Name, ID, Device Name",
        "func": "var response = [];\nvar devices = flow.get(\"devices\") || {};\nvar size = Object.keys(devices).length;\nif(size <= 0) {\n    node.error(\"Please Update Devices First\");\n}\nmsg.payload.data.forEach(function(item){\n    var pair = {\n        \"Device\": devices[item.owner.rid],\n        \"id\": item.id,\n        \"type\": item.type,\n    };\n    response.push(pair);\n});\nreturn {\n    \"payload\": response,\n    \"topic\": \"Motion name/rids\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2810,
        "y": 1060,
        "wires": [
            [
                "e37952d0dc3706e8",
                "9d751f195b97ab97"
            ]
        ]
    },
    {
        "id": "e37952d0dc3706e8",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "button",
        "rules": [
            {
                "t": "set",
                "p": "button",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2890,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "9d751f195b97ab97",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "Button",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3090,
        "y": 1060,
        "wires": []
    },
    {
        "id": "d1c907c5153ecc83",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Bridge Data",
        "info": "",
        "x": 2230,
        "y": 740,
        "wires": []
    },
    {
        "id": "c98c5a8aa22daced",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "DO NOT CHANGE ANYTHING HERE",
        "info": "",
        "x": 2210,
        "y": 560,
        "wires": []
    },
    {
        "id": "aa38ff4f229bb7e6",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 480,
        "wires": []
    },
    {
        "id": "cae65ba0dd1b5031",
        "type": "http request",
        "z": "0e0fd1a97350597a",
        "name": "HUE API V2",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "4bc31af9bd03bbdc",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 520,
        "wires": [
            [
                "aa38ff4f229bb7e6",
                "d323c26e7e815be8"
            ]
        ]
    },
    {
        "id": "d91afc3c3de16ebf",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Add your Data here \\n IP and Username",
        "info": "",
        "x": 590,
        "y": 460,
        "wires": []
    },
    {
        "id": "14e1f1d135b7e9d1",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "HEADER V2",
        "func": "// var user is your discovered username, var ip the IP adress of your bridge\nvar user = \"API USERNAME\";\nvar ip = \"YOUR IP\"\n\nif(msg.endpoint === undefined)\n msg.url = \"https://\" + ip + \"/clip/v2/resource\";\nelse if(msg.topic === undefined)\n msg.url = \"https://\" + ip + \"/clip/v2/resource/\" + msg.endpoint;\nelse\n msg.url = \"https://\" + ip + \"/clip/v2/resource/\" + msg.endpoint + \"/\" + msg.topic;\n\nmsg.headers = {};\n\nmsg.headers['hue-application-key'] = user;\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nif(msg.payload != undefined)\n msg.headers['ContentLength'] = JSON.stringify(msg.payload).length;\n\nif(msg.verb === undefined)\n msg.method = \"get\";\nelse\n msg.method = msg.verb;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 520,
        "wires": [
            [
                "cae65ba0dd1b5031"
            ]
        ]
    },
    {
        "id": "cc265bc2392bbe4b",
        "type": "link out",
        "z": "0e0fd1a97350597a",
        "name": "Discover Out",
        "mode": "link",
        "links": [
            "e3e317032b97d1a9",
            "71b4116aa31e8955"
        ],
        "x": 2145,
        "y": 200,
        "wires": []
    },
    {
        "id": "e3e317032b97d1a9",
        "type": "link in",
        "z": "0e0fd1a97350597a",
        "name": "HUE API INPUT",
        "links": [
            "cc265bc2392bbe4b",
            "8d0b43fbf3fb1bb7"
        ],
        "x": 360,
        "y": 520,
        "wires": [
            [
                "14e1f1d135b7e9d1"
            ]
        ],
        "l": true
    },
    {
        "id": "ebd21ba0d066358b",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "HEADER V2",
        "func": "// you can copy the user key from the hue config node out of Huemagic\nvar user = \"API USERNAME\";\nvar ip = \"YOUR IP\"\n\nif(msg.endpoint === undefined)\n msg.url = \"https://\" + ip + \"/clip/v2/resource\";\nelse if(msg.topic === undefined)\n msg.url = \"https://\" + ip + \"/clip/v2/resource/\" + msg.endpoint;\nelse\n msg.url = \"https://\" + ip + \"/clip/v2/resource/\" + msg.endpoint + \"/\" + msg.topic;\n\nmsg.headers = {};\n\nmsg.headers['hue-application-key'] = user;\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nif(msg.payload != undefined)\n msg.headers['ContentLength'] = JSON.stringify(msg.payload).length;\n\nif(msg.verb === undefined)\n msg.method = \"get\";\nelse\n msg.method = msg.verb;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 780,
        "wires": [
            [
                "069a46c8d2f6a8b7"
            ]
        ]
    },
    {
        "id": "d9cb6bc90a13dd82",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Add your Data here",
        "info": "",
        "x": 410,
        "y": 740,
        "wires": []
    },
    {
        "id": "81698a59853e1aa9",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "API KEY",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"devicetype\":\"nodered2\",\"generateclientkey\":true}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 200,
        "wires": [
            [
                "48c40913cdf7422f"
            ]
        ]
    },
    {
        "id": "7e756ec9ff3182d0",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "Request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 360,
        "y": 200,
        "wires": [
            [
                "81698a59853e1aa9"
            ]
        ]
    },
    {
        "id": "4f8778ebd9bdeae3",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "API KEY",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 200,
        "wires": []
    },
    {
        "id": "48c40913cdf7422f",
        "type": "http request",
        "z": "0e0fd1a97350597a",
        "name": "HUE Bridge IP",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "192.168.20.9",
        "tls": "4bc31af9bd03bbdc",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 840,
        "y": 200,
        "wires": [
            [
                "4f8778ebd9bdeae3"
            ]
        ]
    },
    {
        "id": "1f29d5fb6e032a9d",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Add your IP here",
        "info": "",
        "x": 840,
        "y": 160,
        "wires": []
    },
    {
        "id": "9366e4e0d508eab8",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Request new API KEY (username) \\n press the button on your Bridge and request \\n !! ADD IP FIRST !! -------------------------->>> ",
        "info": "",
        "x": 430,
        "y": 120,
        "wires": []
    },
    {
        "id": "c24278f83f931d3a",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "This is a different approach that can be used when \\n the step3 http request causes connection issues",
        "info": "",
        "x": 690,
        "y": 680,
        "wires": []
    },
    {
        "id": "0d67eaeb449be56f",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "username",
        "info": "",
        "x": 1040,
        "y": 160,
        "wires": []
    },
    {
        "id": "70b2ad02a12e950d",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Step 1",
        "info": "",
        "x": 150,
        "y": 200,
        "wires": []
    },
    {
        "id": "acac2066de3ed018",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Step 2",
        "info": "",
        "x": 150,
        "y": 360,
        "wires": []
    },
    {
        "id": "55c2a64760b792aa",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Step 3",
        "info": "",
        "x": 150,
        "y": 520,
        "wires": []
    },
    {
        "id": "b53b57516fc70331",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Step 4",
        "info": "",
        "x": 1930,
        "y": 80,
        "wires": []
    },
    {
        "id": "a6d3a6be5176bbbb",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Step 3.b",
        "info": "",
        "x": 160,
        "y": 720,
        "wires": []
    },
    {
        "id": "f009f96a46efdc3b",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Configure this Node \\n IP and Username",
        "info": "",
        "x": 350,
        "y": 300,
        "wires": []
    },
    {
        "id": "e5603bce935e14e5",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "This will request all Data fron the Bridge, \\n just click the Inject node and wait 15 seconds",
        "info": "",
        "x": 1930,
        "y": 140,
        "wires": []
    },
    {
        "id": "0cb8c3010fd6feac",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "After you requested the Data \\n use the Inject Nodes to get ID / RID \\n the Data will apear in the Debug Window",
        "info": "",
        "x": 2220,
        "y": 480,
        "wires": []
    },
    {
        "id": "cfb5443d41e0477f",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "To get responses from lamps / rooms / \\n zones add your discovered ID / RID here \\n - for a lamp you need to add the ID \\n - for a room / zone you need to add the RID \\n you need one subflow for every lamp or room",
        "info": "",
        "x": 270,
        "y": 1340,
        "wires": []
    },
    {
        "id": "f9db2c5de26764a3",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Step 5",
        "info": "",
        "x": 2230,
        "y": 400,
        "wires": []
    },
    {
        "id": "ac2cc96383b1dde1",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "To get responses from motion sensors\\n add your discovered ID here \\n you need one subflow for every sensor ",
        "info": "",
        "x": 250,
        "y": 1600,
        "wires": []
    },
    {
        "id": "f7da7af6f1282c45",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "To get responses from buttons \\n add your discovered ID here \\n you need one subflow for every button",
        "info": "",
        "x": 250,
        "y": 1840,
        "wires": []
    },
    {
        "id": "e77a424ccae8a980",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Dimming 10% down / 1s transition",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"dynamics\":{\"duration\":1000},\"dimming_delta\":{\"action\":\"down\",\"brightness_delta\":10}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 1380,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "1b6443113dc91621",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Light off / 1s transition",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":false},\"dynamics\":{\"duration\":1000}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 1460,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "d39f4b303d23739e",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1380,
        "wires": [
            [
                "e77a424ccae8a980"
            ]
        ]
    },
    {
        "id": "0ec7e35ad8d9f2c2",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1340,
        "wires": [
            [
                "587a51ce6a1303ce"
            ]
        ]
    },
    {
        "id": "45f1d6c3bfac899b",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1460,
        "wires": [
            [
                "1b6443113dc91621"
            ]
        ]
    },
    {
        "id": "587a51ce6a1303ce",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Light on / 100% / orange / 1s transition",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":100},\"dynamics\":{\"duration\":1000},\"color\":{\"xy\":{\"x\":0.6101,\"y\":0.3662}}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1340,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "a669637935852ff2",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Dimming 10% up / 1s transition",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"dynamics\":{\"duration\":1000},\"dimming_delta\":{\"action\":\"up\",\"brightness_delta\":10}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 1420,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "96551ef1cab665d3",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1420,
        "wires": [
            [
                "a669637935852ff2"
            ]
        ]
    },
    {
        "id": "e43318a9e6108e03",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Light on / 100% / red / alert flashing",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":100},\"color\":{\"xy\":{\"x\":0.7,\"y\":0.25}},\"alert\":{\"action\":\"breathe\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 1500,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "8188436c58bde60a",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1500,
        "wires": [
            [
                "e43318a9e6108e03"
            ]
        ]
    },
    {
        "id": "0d2fac5552f0ee72",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Light on / 80% / 2s transition / color temp cold 153",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":80},\"dynamics\":{\"duration\":2000},\"color_temperature\":{\"mirek\":153}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 1540,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "76020afc9b2e8495",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1540,
        "wires": [
            [
                "0d2fac5552f0ee72"
            ]
        ]
    },
    {
        "id": "43c180b65c8edbaf",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Light on / 50% / 1s transition / color temp warm 500",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":50},\"dynamics\":{\"duration\":1000},\"color_temperature\":{\"mirek\":500}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1580,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "ee32905b22ea4703",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1580,
        "wires": [
            [
                "43c180b65c8edbaf"
            ]
        ]
    },
    {
        "id": "3918ae1d48f02496",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Room or Zone on / 100% / orange / 1s transition",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "grouped_light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "replace with discovered !!!>> RID <<!!!",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":100},\"dynamics\":{\"duration\":1000},\"color\":{\"xy\":{\"x\":0.6101,\"y\":0.3662}}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 1700,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "d671213ce25650e3",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1700,
        "wires": [
            [
                "3918ae1d48f02496"
            ]
        ]
    },
    {
        "id": "2766e908d9c939b1",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "grouped_light - DOUBLE CLICK FOR INFO",
        "info": "(Rooms & Zones) can be controlled in almost the samme way as lights. \n\nJust the endpoint in the change node is different and instead of \nusing the ID of a Room / Zone you need to use the discoverd **rid **\n\ngrouped_light is a service (rid) that is connected to the group/zone ID",
        "x": 1180,
        "y": 1660,
        "wires": []
    },
    {
        "id": "07679c9355bfe0c5",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Motion Sensor DISABLED",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "motion",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"enabled\":false}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 2040,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "92d5e19cbf20b7a6",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Motion Sensor ENABLED",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "motion",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"enabled\":true}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 2000,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "c40b2306a78285a3",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 2040,
        "wires": [
            [
                "07679c9355bfe0c5"
            ]
        ]
    },
    {
        "id": "367eb75b3364208e",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 2000,
        "wires": [
            [
                "92d5e19cbf20b7a6"
            ]
        ]
    },
    {
        "id": "8036b7c5c5ca661c",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Motion Sensor ENABLED / DISABLED",
        "info": "",
        "x": 1170,
        "y": 1960,
        "wires": []
    },
    {
        "id": "89877aa385eb78ba",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Recall a Scene",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "scene",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"recall\":{\"action\":\"active\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 1780,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ],
        "icon": "font-awesome/fa-star"
    },
    {
        "id": "be1a9c8b5809695a",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Room or Zone off",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "grouped_light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "replace with discovered !!!>> RID <<!!!",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 1740,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "90f187014f6d1223",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1740,
        "wires": [
            [
                "be1a9c8b5809695a"
            ]
        ]
    },
    {
        "id": "18513689a97dbb27",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 1780,
        "wires": [
            [
                "89877aa385eb78ba"
            ]
        ]
    },
    {
        "id": "c10eaad8c9b3d371",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Recall a Scene - DOUBLE CLICK FOR INFO",
        "info": "I highly recommend to use Scenes to turn on Rooms/Zones. \nThis is just one request to the Bridge and the rest is \nprocessed in the bridge. When 4 lights are turned on simultanious, \nthe bridge possible wont be able to handle these requests at once.\n\nIf you have a setup where it is needed to turn on seperate lights, \nthen add delay nodes i front of the chhange node. \n\nExample: 4 Lights need to be tunes on, \nlight 1 = no delay\nlight 2 = 200ms delay\nlight 3 = 400ms delay\nlight 4 = 600ms delay\n\nwhen turning light off simultanious, this should be done in this way.\nBetter is to turn off Rooms or Zones with one request.",
        "x": 1190,
        "y": 1820,
        "wires": []
    },
    {
        "id": "c22374ba33e4323e",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Get State",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "grouped_light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ADD GROUP RID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "get",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 2160,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "54004784967d796c",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 2160,
        "wires": [
            [
                "c22374ba33e4323e"
            ]
        ]
    },
    {
        "id": "95a0ca83e79d96f4",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Get state of a Group",
        "info": "",
        "x": 1110,
        "y": 2120,
        "wires": []
    },
    {
        "id": "f63ead3d9d8ff68a",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Step 6",
        "info": "",
        "x": 150,
        "y": 1220,
        "wires": []
    },
    {
        "id": "4a469d3ffe0e059d",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "These are pre-configured actions \\n add the ID / RID and try it out \\n with this samples it should be easy \\n to create all the actions you need",
        "info": "",
        "x": 1480,
        "y": 1900,
        "wires": []
    },
    {
        "id": "093b72ef3b0f464a",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "----- CONTROLLING -----",
        "info": "",
        "x": 1250,
        "y": 1220,
        "wires": []
    },
    {
        "id": "db212266972d486e",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "----- STATUS UPDATES -----",
        "info": "",
        "x": 340,
        "y": 1220,
        "wires": []
    },
    {
        "id": "623859251fa31909",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Gradient Stripe",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":100},\"gradient\":{\"points\":[{\"color\":{\"xy\":{\"x\":0.6712,\"y\":0.2984}}},{\"color\":{\"xy\":{\"x\":0.4975,\"y\":0.3572}}},{\"color\":{\"xy\":{\"x\":0.4028,\"y\":0.3948}}},{\"color\":{\"xy\":{\"x\":0.424,\"y\":0.4396}}},{\"color\":{\"xy\":{\"x\":0.28,\"y\":0.6174}}}]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 2280,
        "wires": [
            [
                "e45b4438868f47df"
            ]
        ]
    },
    {
        "id": "0e4ca24be2c9eb20",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Gradient Stripe",
        "info": "",
        "x": 1100,
        "y": 2240,
        "wires": []
    },
    {
        "id": "d754f7a1a6f2a98e",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 2280,
        "wires": [
            [
                "623859251fa31909"
            ]
        ]
    },
    {
        "id": "0c5d170ddc767822",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Lights - Node name describes what it does, add your IDs",
        "info": "",
        "x": 1230,
        "y": 1300,
        "wires": []
    },
    {
        "id": "29ede7afcd9f6efb",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Step 7",
        "info": "",
        "x": 1070,
        "y": 1220,
        "wires": []
    },
    {
        "id": "e45b4438868f47df",
        "type": "function",
        "z": "0e0fd1a97350597a",
        "name": "HEADER V2",
        "func": "// var user is your discovered username, var ip the IP adress of your bridge\nvar user = \"API USERNAME\";\nvar ip = \"YOUR IP\"\n\nif(msg.endpoint === undefined)\n msg.url = \"https://\" + ip + \"/clip/v2/resource\";\nelse if(msg.topic === undefined)\n msg.url = \"https://\" + ip + \"/clip/v2/resource/\" + msg.endpoint;\nelse\n msg.url = \"https://\" + ip + \"/clip/v2/resource/\" + msg.endpoint + \"/\" + msg.topic;\n\nmsg.headers = {};\n\nmsg.headers['hue-application-key'] = user;\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nif(msg.payload != undefined)\n msg.headers['ContentLength'] = JSON.stringify(msg.payload).length;\n\nif(msg.verb === undefined)\n msg.method = \"get\";\nelse\n msg.method = msg.verb;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 1780,
        "wires": [
            [
                "791f18c3a2f3eab3"
            ]
        ]
    },
    {
        "id": "791f18c3a2f3eab3",
        "type": "http request",
        "z": "0e0fd1a97350597a",
        "name": "HUE API V2",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "4bc31af9bd03bbdc",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2070,
        "y": 1780,
        "wires": [
            [
                "4b838e5533944638"
            ]
        ]
    },
    {
        "id": "9fc2dd11abdbccf9",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Add your Data here \\n IP and Username",
        "info": "",
        "x": 1930,
        "y": 1720,
        "wires": []
    },
    {
        "id": "4b838e5533944638",
        "type": "debug",
        "z": "0e0fd1a97350597a",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 1740,
        "wires": []
    },
    {
        "id": "1f9acf83.9006e",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Dimming 10% down / 1s transition",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"dynamics\":{\"duration\":1000},\"dimming_delta\":{\"action\":\"down\",\"brightness_delta\":10}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "fe7a9c3.9f0086",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Light off / 1s transition",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":false},\"dynamics\":{\"duration\":1000}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "d633674f.d88018",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2420,
        "wires": [
            [
                "1f9acf83.9006e"
            ]
        ]
    },
    {
        "id": "f499cb89.8de808",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2380,
        "wires": [
            [
                "e6553522.6f6c08"
            ]
        ]
    },
    {
        "id": "f8681d08.e3e3",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2500,
        "wires": [
            [
                "fe7a9c3.9f0086"
            ]
        ]
    },
    {
        "id": "e6553522.6f6c08",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Light on / 100% / orange / 1s transition",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":100},\"dynamics\":{\"duration\":1000},\"color\":{\"xy\":{\"x\":0.6101,\"y\":0.3662}}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "4ef7e467.ceb65c",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Dimming 10% up / 1s transition",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"dynamics\":{\"duration\":1000},\"dimming_delta\":{\"action\":\"up\",\"brightness_delta\":10}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "6d4c8dc9.3fd1a4",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2460,
        "wires": [
            [
                "4ef7e467.ceb65c"
            ]
        ]
    },
    {
        "id": "3137bc6e.379034",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Light on / 100% / red / alert flashing",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":100},\"color\":{\"xy\":{\"x\":0.7,\"y\":0.25}},\"alert\":{\"action\":\"breathe\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "f2935ffd.f56e9",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2540,
        "wires": [
            [
                "3137bc6e.379034"
            ]
        ]
    },
    {
        "id": "2d820094.04ff7",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Light on / 80% / 2s transition / color temp cold 153",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":80},\"dynamics\":{\"duration\":2000},\"color_temperature\":{\"mirek\":153}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "1eadd878.5437a8",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2580,
        "wires": [
            [
                "2d820094.04ff7"
            ]
        ]
    },
    {
        "id": "c062e60a.efec68",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Light on / 50% / 1s transition / color temp warm 500",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":50},\"dynamics\":{\"duration\":1000},\"color_temperature\":{\"mirek\":500}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2620,
        "wires": [
            []
        ]
    },
    {
        "id": "be9c7dfe.0196e",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2620,
        "wires": [
            [
                "c062e60a.efec68"
            ]
        ]
    },
    {
        "id": "bcf5eb02.5eed18",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "lights - DOUBLE CLICK FOR INFO",
        "info": "",
        "x": 300,
        "y": 2340,
        "wires": []
    },
    {
        "id": "e4e239bb.b444c8",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Room or Zone on / 100% / orange / 1s transition",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "grouped_light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "replace with discovered !!!>> RID <<!!!",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":true},\"dimming\":{\"brightness\":100},\"dynamics\":{\"duration\":1000},\"color\":{\"xy\":{\"x\":0.6101,\"y\":0.3662}}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "89d3944f.5d4648",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2740,
        "wires": [
            [
                "e4e239bb.b444c8"
            ]
        ]
    },
    {
        "id": "3e13f7c9.3ccd68",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "grouped_light - DOUBLE CLICK FOR INFO",
        "info": "(Rooms & Zones) can be controlled in almost the samme way as lights. \n\nJust the endpoint in the change node is different and instead of using the ID of a Room / Zone you need to use the discoverd **rid **\n\ngrouped_light is a service (rid) that is connected to the group/zone ID",
        "x": 330,
        "y": 2700,
        "wires": []
    },
    {
        "id": "a96124fc.93a588",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Motion Sensor DISABLED",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "motion",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"enabled\":false}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "531a73e9.1f44ac",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Motion Sensor ENABLED",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "motion",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"enabled\":true}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "1ff487cb.ff6758",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 3060,
        "wires": [
            [
                "a96124fc.93a588"
            ]
        ]
    },
    {
        "id": "56a41435.3ee8ac",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 3020,
        "wires": [
            [
                "531a73e9.1f44ac"
            ]
        ]
    },
    {
        "id": "2c9c0ecc.6cd702",
        "type": "link in",
        "z": "0e0fd1a97350597a",
        "name": "Motion Sensor ***Name*** On",
        "links": [],
        "x": 375,
        "y": 3020,
        "wires": [
            [
                "531a73e9.1f44ac"
            ]
        ]
    },
    {
        "id": "92da63d2.31ae1",
        "type": "link in",
        "z": "0e0fd1a97350597a",
        "name": "Motion Sensor ***Name*** Off",
        "links": [],
        "x": 375,
        "y": 3060,
        "wires": [
            [
                "a96124fc.93a588"
            ]
        ]
    },
    {
        "id": "ebe004ab.608d58",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Motion Sensor ENABLED / DISABLED",
        "info": "",
        "x": 310,
        "y": 2980,
        "wires": []
    },
    {
        "id": "31201e91.036a72",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Recall a Scene",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "scene",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Replace with your discovered ID",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"recall\":{\"action\":\"active\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 2900,
        "wires": [
            []
        ],
        "icon": "font-awesome/fa-star"
    },
    {
        "id": "84c412bc.8407c",
        "type": "change",
        "z": "0e0fd1a97350597a",
        "name": "Room or Zone off",
        "rules": [
            {
                "t": "set",
                "p": "endpoint",
                "pt": "msg",
                "to": "grouped_light",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "replace with discovered !!!>> RID <<!!!",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "verb",
                "pt": "msg",
                "to": "put",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "56458bc7.ed74e4",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2780,
        "wires": [
            [
                "84c412bc.8407c"
            ]
        ]
    },
    {
        "id": "d417720d.58ecd",
        "type": "inject",
        "z": "0e0fd1a97350597a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2900,
        "wires": [
            [
                "31201e91.036a72"
            ]
        ]
    },
    {
        "id": "6b93df73.d4304",
        "type": "comment",
        "z": "0e0fd1a97350597a",
        "name": "Recall a Scene - DOUBLE CLICK FOR INFO",
        "info": "I highly recommend to use Scenes to turn on Rooms/Zones. This is just one request to the Bridge and the rest is processed in the bridge. When 4 lights are turned on simultanious, the bridge possible wont be able to handle these requests at once.\n\nIf you have a sestup where it is needed to turn on seperate lights, then add delay nodes i front of the chhange node. \n\nExample: 4 Lights need to be tunes on, \nlight 1 = no delay\nlight 2 = 200ms delay\nlight 3 = 400ms delay\nlight 4 = 600ms delay\n\nwhen turning light off simultanious, this should be done in this way. Better is to turn off Rooms or Zones with one request.",
        "x": 330,
        "y": 2860,
        "wires": []
    }
]